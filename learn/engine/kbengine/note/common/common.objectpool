问题：PoolObject类说明？
试答：池对象类，所有使用池的对象都派生于这个类，同时必须实现回收功能。
	  这个类的接口一般被ObjectPool类对象调用。因为是属于内存管理部分，
	  所以派生类尽量不关心调用的细节，只关心对象创建和删除需要处理的
	  业务。
	  
	  函数和变量说明：
	  onReclaimObject()函数在回收对象（reclaimObject_）的时候调用；
	  onEabledPoolObject()函数在创建对象（createObject）的时候调用；
	  getPoolObjectBytes()函数目前只有MemoryStream类有重载；
	  destructorPoolObject()函数对象池析构（destroy）的时候调用，目前貌似没有对象需要这个处理；
	  isEnabledPoolObject_变量用来标识池对象是否处于激活状态，也就是从池中已经取出了，正在使用中。
	  
说明：objectpool.h(362)


问题：ObjectPool类说明？
试答：对象池类，因为一些对象会非常频繁的被创建， 例如：MemoryStream, Bundle, TCPPacket等等，所以
	  需要一个对象池类来管理对象的创建，避免频繁的内存申请和释放，提供服务器性能。
	  
	  对象池类对通过服务端峰值有效的预估提前创建出一些对象缓存起来，在用到的时候直接从对象池中
	  获取一个未被使用的对象即可。
	  
	  ObjectPool类提供了创建和回收的接口，同时会定时检测对象池是否过大，从而对其进行瘦身。另外要求
	  对象是PoolObject类的派生类，约定了一些接口在操作对象的创建和回收时调用。
	  
	  对象池类加了锁的操作保证了线程上的安全。
	  
	  使用list来管理对象，使用变量obj_count_记录对象长度，绕开list.size()的性能缺点。
	  
	  从对象池类中取走的对象必须自己管理（参考createObjecte()实现），不然会造成内存泄漏。
说明：objectpool.h(52)


问题：SmartObjectPool类和SmartPoolObject类说明？
试答：智能对象池和智能池对象是在原来的对象池功能基础上加了自动回收的功能，减少内存泄漏的可能性。
说明：objectpool.h(427)