问题：这个文件实现了哪些功能？
试答：1，utf8编码字符输出函数；
	  2，日志打印类型的宏定义；
	  3，通过日志类型取对应的日志名称函数；
	  4，调试辅助器（DebugHelper）类定义；	  
说明：-


问题：调试辅助器（DebugHelper）类的静态函数initialize()说明？
试答：1，根据组件类型设置log4cxx属性；
	  2，获取logger指针，将其赋值给全局变量g_logger；
说明：-	  


问题：调试辅助器（DebugHelper）类的几种打印日志函数说明？
试答：1，print_msg(s) 不加任何修饰，s是怎样的，输出就是怎样的，受日志等级控制是否输出，同info_msg(s)。
	  2，debug_msg(s) 添加'[DEBUG]'修饰，受日志等级控制是否输出。
	  3，error_msg(s) 添加'[ERROR]'修饰，受日志等级控制是否输出,PLATFORM_WIN32控制台下显示颜色为红色。	  
	  4，info_msg(s) 添加'[INFO]'修饰，受日志等级控制是否输出,PLATFORM_WIN32控制台下显示颜色为红色。
	  5，warning_msg(s) 添加'[WARNING]'修饰，受日志等级控制是否输出,PLATFORM_WIN32控制台下显示颜色为红色。
	  6，critical_msg(s) 添加'[CRITICAL]'修饰，受日志等级控制是否输出,PLATFORM_WIN32控制台下显示颜色为红色，会输出堆栈日志。
	  7，script_info_msg(s) 添加'[S_INFO]'修饰，受日志等级控制是否输出。
	  8，script_error_msg(s) 添加'[S_ERROR]'修饰，受日志等级控制是否输出,PLATFORM_WIN32控制台下显示颜色为红色。
	  9，backtrace_msg() 显示堆栈日志,只有unix/linux系统下才有用。
说明：debug_helper.h(150)		


问题：调试辅助器（DebugHelper）类的静态函数onMessage()说明？
试答：函数的开头有个g_shouldWriteToSysLog变量，在非WIN32平台下，用来控制是否输出系统日志，值为true的时候输出。
	  但是并没有发现对这个g_shouldWriteToSysLog值进行修改的调用。可以暂时忽略。
	  要输出的日志长度为0或者变量noSyncLog_为true时，则onMessage()函数返回。
	  进程类型为守护进程，控制台进程，日志进程，客户端进程，则onMessage()函数返回。
	  如果不在主线程，则缓存日志信息到缓存包。
	  如果是在主线程，则缓存日志信息到发送包，最后由DebugHelperSyncHandler函数负责发送到日志进程输出日志。
	  如果是在主线程，缓存的日志信息数量达到配置的值时，则重新申请日志缓存，并设置noSyncLog_为true，不再同步了，
	  而且这是没有逆转操作。因为出现这个情况说明日志量太多了，频繁的发送个日志服，影响服务器性能。	  
说明：debug_helper.cpp(575)


