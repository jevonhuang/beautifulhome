问题：EventDispatcher类的几种状态？
试答：1，EVENT_DISPATCHER_STATUS_RUNNING，运行状态，服务器正常情况下的状态；
	  2，EVENT_DISPATCHER_STATUS_WAITING_BREAK_PROCESSING，等待打断状态，当服务器开始关服时，会把EventDispatcher类状态至为这个状态（这个状态貌似没啥用）；
	  3，EVENT_DISPATCHER_STATUS_BREAK_PROCESSING，打断状态，服务器关服相关的业务处理完成会置这个状态；
说明：event_dispatcher.h(40)


问题：EventDispatcher类构造函数说明？
试答：成员变量的初始化，无需外部传参，在进程启动的时候创建，然后交割ServerApp管理。
说明：event_dispatcher.cpp(17),kbemain.h(121)


问题：EventDispatcher类析构函数说明？
试答：进程退出时，自动调用。
说明：event_dispatcher.cpp(35)


问题：EventDispatcher类processOnce()函数说明？
试答：当状态不是EVENT_DISPATCHER_STATUS_BREAK_PROCESSING（打断状态）将状态置为EVENT_DISPATCHER_STATUS_RUNNING（运行状态），
	  然后处理任务事务，超时事务，统计事务和网络事务。
	  当状态是EVENT_DISPATCHER_STATUS_BREAK_PROCESSING（打断状态）时，则只处理任务事务，和统计事务。
说明：event_dispatcher.cpp(189)


问题：EventDispatcher类processUntilBreak()函数说明？
试答：进程的主循环，一般服务器中都会有这样的一个循环。
	  当状态是EVENT_DISPATCHER_STATUS_BREAK_PROCESSING（打断状态）时，跳出循环，整个进程结束退出。
说明：event_dispatcher.cpp(177)


问题：EventDispatcher类的hasBreakProcessing()函数说明？
试答：返回是否打断状态，在组件管理中会用到这个接口。
说明：event_dispatcher.cpp(25), components.cpp(1153, 1340, 1390, 1458)


问题：EventDispatcher类的waitingBreakProcessing()函数？
试答：返回是否等待状态，在组件管理中会用到这个接口。
说明：event_dispatcher.cpp(30), components.cpp(1153, 1390, 1458)


问题：EventDispatcher类的breakProcessing()函数？
试答：设置打断状态，也就是关闭进程状态，以下几种情况会设置这个状态：
	  1，当组件广播自己的信息时一直错误的次数超过255次时，会设置这个状态；
	  2，当组件收到关闭指令时，会设置这个状态；
	  3，当udp监听或广播异常的时，会设置这个状态；
说明：components.cpp(1404, 1472), serverapp.cpp(114), bundle_broadcast.cpp(37, 115)


问题：EventDispatcher类的setWaitBreakProcessing()函数？
试答：貌似没有什么用，关闭组件前，会设置这个状态。
说明：serverapp.cpp(103)


问题：EventDispatcher类的addTask()函数？
试答：添加任务事务入口函数。
说明：event_dispatcher.cpp(119)


问题：EventDispatcher类的cancelTask()函数？
试答：移除任务事务入口函数。一般在某个模块析构的时候会调用。
说明：event_dispatcher.cpp(125)


问题：EventDispatcher类的maxWait()函数？
试答：函数有实现但是没有地方调用, 在EvetDispatcher函数中直接使用定义的成员变量maxWait_。
说明：event_dispatcher.h(44, 45)


问题：EventDispatcher类的calculateWait()函数？
试答：计算距离下次定时器心跳的时间。将这段间隔用于处理网络事件，不浪费。
说明：event_dispatcher.h(131, 170)


问题：EventDispatcher类的 registerReadFileDescriptor()函数？
试答：注册一个回调函数，这个回调函数当socket描述符/文件描述符可读时被调用。
	  其实是对EventPoller接口的封装，EventPoller接口又是对epoll的封装。
说明：event_dispatcher.h(59)


问题：EventDispatcher类的 deregisterReadFileDescriptor()函数？
试答：注销已经通过KBEngine.registerReadFileDescriptor注册的回调。
	  其实是对EventPoller接口的封装，EventPoller接口又是对epoll的封装。
说明：event_dispatcher.h(73)


问题：EventDispatcher类的 registerWriteFileDescriptor()函数？
试答：注册一个回调函数，这个回调函数当socket描述符/文件描述符可写时被调用。
	  其实是对EventPoller接口的封装，EventPoller接口又是对epoll的封装。
说明：event_dispatcher.h(66)


问题：EventDispatcher类的 deregisterWriteFileDescriptor()函数？
试答：注销已经通过KBEngine.registerWriteFileDescriptor注册的回调。 
	  其实是对EventPoller接口的封装，EventPoller接口又是对epoll的封装。
说明：event_dispatcher.h(79)


问题：EventDispatcher类的 addTimer()函数？
试答：定时器添加入口，调用addTimerCommon函数。
说明：event_dispatcher.inl(9)


问题：EventDispatcher类的 addTimerCommon()函数？
试答：定时器添加入口，对Timers类接口的封装。
	  添加定时器必须有处理类句柄参数；
	  定时器的定时时间为0，返回一个默认TimerHandle类对象，不加入定时器管理器中；
	  调用Timers类的添加定时器接口，添加定时器。
	  返回生成的TimerHandle类对象。
说明：event_dispatcher.inl(9)


问题：EventDispatcher类的 getSpareTime()函数？
试答：获取空闲时间，当组件去底层select或者epoll_wait事件处理时，这区间的间隔时间称之为空闲时间，
	  利用这段时间来计算负载情况。
说明：event_dispatcher.cpp(108)


问题：EventDispatcher类的 clearSpareTime()函数？
试答：清理上次的空闲时间，累计到accSpareTime_。
说明：event_dispatcher.cpp(112)


问题：EventDispatcher类的 errorReporter()函数？
试答：返回ErrorReport类对象指针。
说明：event_dispatcher.h(58)


问题：EventDispatcher类的 createPoller()函数？
试答：EventPoller类对象的创建函数，调用EventPoller类的静态函数来完成。
说明：event_dispatcher.cpp(52)


问题：EventDispatcher类的 pPoller()函数？
试答：返回EventPoller类对象指针。
说明：event_dispatcher.h(60)


问题：EventDispatcher类处理网络事件函数processNetwork()函数？
试答：参数shouldIdle设置为true时,可以提高组件的性能，因为在有超时事件处理的组件中，
	  如果超时事件的时间还没有到，组件没有啥事可做，那么可以利用这个间隔来等待网络事件，
	  以便可以一次处理更多的网络事件。
	  
	  pPoller是一个EventPoller的实例。EventPoller是一个抽象类，它目前有两个派生子类，
	  SelectorPoller和EpollPoller，顾名思义，它们分别是利用select和epoll系统api进行异步i/o工作的。
	  网络事件的i/o都在EventPoller类的processPendingEvents()函数中进行的。
说明：event_dispatcher.cpp(170, 188)
	  
	  
问题：EventDispatcher类处理任务事件函数processTimers()函数？
试答：EventDispatcher类管着Timers64类对象pTimers_，并抛出接口addTimer()，最终所有的定时器都进入
	  pTimers_中，所以processTimers()函数只要调用Timers64类的处理函数process()就可以了。
	  
	  类内部有个addTimerCommon()私有函数，供addTimer调用。作者应该是想提供多种类型addTimer的封装，
	  但目前看来常用类型就够用了。	  
说明: event_dispatcher.h(71)，event_dispatcher.cpp(151)	  
	
	
问题：EventDispatcher类处理任务事件函数processTasks()函数？
试答：EventDispatcher类管着Tasks类对象pTasks_，并抛出两个接口addTask()和cancelTask()接口，最终
	  所有的任务都进入pTasks_中，所以processTasks()函数只要调用Tasks类的处理函数process()就可以了。
说明：event_dispatcher.h(70)，event_dispatcher.cpp(145)


问题：EventDispatcher类处理任务事件函数processStats()函数？
试答：看函数处理是要统计节省的时间，但是没有找到任何输出，所以暂时没什么价值。
说明: event_dispatcher.cpp(176)


问题：总结说明？
试答：KBEngine的组件几个比较重要的事件的处理都有EventDispatcher管理，处理顺序是任务事件，超时事件，
	  统计事件，网络事件。由此源生出整个服务器的逻辑依赖于Tasks类，Timers类，EventPoller类,这三个类
	  处理了服务器的所有事务。所以学习服务框架可以顺着这三个类继续往下深挖。
说明：


问题：相关类型
试答；InputNotificationHandler
	  OutputNotificationHandler
	  TimerHandler
	  ErrorReporter
	  TimeStamp
说明：