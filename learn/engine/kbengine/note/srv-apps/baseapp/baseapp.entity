问题：Entity的设计说明？
试答：（官方说明）Entity实体被定义为服务端最基本的对象，类似Python的基础对象object。
	  我们的通讯(远程访问)是通过Entity上的方法申明；我们的数据存储(数据库持久化存储)也是通过Entity上的属性进行。
	  我们可以大体的理解为，引擎端的开发是基于Entity实体的。

	  实体包含哪几部分？
	  1、base部分：
	  实体在Baseapp上的对象（或称为实现），这部分叫做base部分。

	  2、cell部分：
	  实体在Cellapp上的对象（或称为实现），这部分叫做cell部分。
	  
	  3、client部分：
	  实体在客户端上的对象（或称为实现），这部分叫做client部分。一般在客户端上进行实现，不在服务端范围内；

	  
	  实体创建过程中，各部分是如何相应创建和联系在一起的？
	  
说明：entity.h(37)


问题：Entity的构造函数？
试答：实体构造函数，在onCreateEntity()函数中调用，或者又在createEntity()中被调用。
说明：entity.h(37), entity_app.h(676)


问题：Entity的析构函数？
试答：实体析构函数，在onCreateEntity()函数中调用，或者又在createEntity()中被调用。
说明：entity.h(159)


问题：Entity的hasDB()？
试答：是否存储数据库，在创建实体的时候调用writeToDB()函数时会设置值为true。销毁实体的时候会设置值为false。
说明：entity.h(62), entity.cpp(1170)


问题：Entity的dbid()？
试答：实体的数据库索引，在实体加载的时候设置或者第一次实体写入数据库回调的时候设置。
	  pyGetDBID对应的脚本属性databaseID是抛给脚本的获取数据库id的接口。
说明：entity.h(68)


问题：Entity的dbInterfaceIndex()？
试答：数据库接口索引，同dbid设置。
	  加载databaseInterfaces中数据库配置的时候，会把每个数据库配置信息压入一个vector容器，
	  这里的dbInterfaceIndex就是对应这个容器中的索引。
	  pyGetDBInterfaceName对应的脚本属性databaseInterfaceName是抛给脚本的获取数据库接口名称的接口。
说明：entity.h(68)


问题：Entity的destroyCellEntity()？
试答：销毁实体的cell部分数据，一般供脚本层调用，最后是发包给cell组件，在cell组件中清除数据。
说明：entity.cpp(486)


问题：Entity的cellEntityCall()？
试答：cell组件中实体的调用接口。在onGetCell回调中设置这个值。
说明：entity.cpp(90,886)


问题：Entity的clientEntityCall()？
试答：客户端的实体的调用接口。在客户端登陆成功的时候设置这个值。
说明：entity.cpp(97)


问题：Entity的isCreatedSpace()？
试答：是否在cell中创建了空间。在createCellEntityInNewSpace()中会设置true，在onLoseCell()会设置为false。
	  base组件通过这个值来处理cell中实体的恢复，同时用来避免空间被重复创建，也就是说一个实体只能在一个
	  空间之中。
说明：entity.cpp(934，1343，1364，1373)