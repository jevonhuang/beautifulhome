<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<script>
var ua = navigator.userAgent.toLowerCase();
if(ua.match(/MicroMessenger/i)=="micromessenger") {
    location.href='http://blog.chinaunix.net/article.php?url='+ window.location.href;
}
</script>
        <style>
    .Blog_nav1_2 a em { display:inline-block; width:16px; height:13px; background:url(/image/v.jpg) no-repeat; overflow:hidden;}
</style>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="stylesheet" type="text/css" href="/css/default/style.css" />
<link rel="stylesheet" type="text/css" href="/css/qqface/qqFace.css" />
<link rel="stylesheet" type="text/css" href="/css/asyncbox/skins/Chrome/asyncbox.css" />
<link rel="stylesheet" type="text/css" href="/assets/f0409051/pager.css" />
<script type="text/javascript" src="/js/jquery.min.js"></script>
<script type="text/javascript" src="/js/jquery.cookies.min.js"></script>
<script type="text/javascript" src="/js/AsyncBox.v1.4.5.js"></script>
<title>Linux signal那些事儿-Bean_lee-ChinaUnix博客</title>
<meta name="description" content='&nbsp; &nbsp; Linux编程，信号是一个让人爱恨交加又不得不提的一个领域。最近我集中学习了Linux的signal相关的内容，分享出来，也为防止自己忘记。
 &nbsp; &nbsp; 信号的本质是异步。异步一这个词，听着高'/>
<script type='text/javascript' src='http://168.it168.com/a/h600.js'></script>

<script type="text/javascript">
if(/AppleWebKit.*Mobile/i.test(navigator.userAgent) || (/MIDP|SymbianOS|NOKIA|SAMSUNG|LG|NEC|TCL|Alcatel|BIRD|DBTEL|Dopod|PHILIPS|HAIER|LENOVO|MOT-|Nokia|SonyEricsson|SIE-|Amoi|ZTE/.test(navigator.userAgent))){
	try{
		if(!/iPad/i.test(navigator.userAgent)){
			var oldurl=window.location.href;
			if(window.location.hostname.indexOf('m.blog.chinaunix.net')==-1){
			var wapUrl= oldurl.replace('blog.chinaunix.net', "m.blog.chinaunix.net") ;
			window.location.href = wapUrl;
			}
		}
	}catch(e){}
}
</script>


<script language="javascript">
//用户是否在线
var isOnLine = '';
$(document).ready(function(){
	var blog = {'name': '', 'name_url': '', 'brief': ''};
	//消息通知显示和隐藏控制
	$('#show_message_slide_button').hover(
		function(){
			$('#message_slide_div').slideDown(100);											   
		},
		function(){
			
		}
	);

	$('#message_slide_div').hover(
		function(){
			
		},
		function(){
			$('#message_slide_div').slideUp(100);
		}
	);
	
	//编辑博客名
	$('#editbna').click(function(){
		blog.name = $('#bnaspan a').text();
		var val = '<input id="bnainput" type="text" style="float:left" value="" rel="' +$(this).attr('rel') + '" /><input id="bnasub" type="button" style="float:left" class="btn1"><input id="bnacanl" type="button" style="float:left" class="btn2"><div class="clear"></div>';
		$('#bnaspan').html(val);
		$('#bnainput').val(blog.name);
		$(this).parent().hide();
	});
	
	$('#bnasub').live('click', function(){
	    var rel = eval('({' + $('#bnainput').attr('rel') + '})');
		var name = $('#bnainput').val();
		if(name != blog.name){
	        $.ajax({
			    type: "POST",
			    url: rel.url,	
			    data: {
				    'name' : name
			    },
			    success:function(data){
				    if(data == 0){
						$('#bnaspan').html(blog.name);
						$('#bnaspan').html('<a href="' + rel.href + '">' + $('#bnaspan').html() + '</a>');
				    }else if(data == -1){
                                        showErrorMsg('名称中含有违禁词，请从新编辑!', '消息提示');
                                    }else{
						$('#bnaspan').html(data);
						$('#bnaspan').html('<a href="' + rel.href + '">' + $('#bnaspan').html() + '</a>');
				    }
					$('#editbna').parent().show();
				}
			});
		}else{
		    $('#bnaspan').text(blog.name).html();
			$('#bnaspan').html('<a href="' + rel.href + '">' + $('#bnaspan').html() + '</a>');
			$('#editbna').parent().show();
		}
	});
	
	$('#bnacanl').live('click', function(){
		var rel = eval('({' + $('#bnainput').attr('rel') + '})');
		$('#bnaspan').html('<a href="' + rel.href + '">' + blog.name + '</a>');
		$('#editbna').parent().show();
	});
	
	//编辑签名
	$('#editbrief').click(function(){
	    blog.brief = $('#briefem').text();
		var val = '<input id="brfinput" type="text" style="float:left" value="" rel="' + $(this).attr('rel') + '" /><input id="brfsub" style="float:left"  type="button" class="btn1"><input style="float:left"  id="brfcanl" type="button" class="btn2"><div class="clear"></div>';
		$('#briefem').html(val);
		$('#brfinput').val(blog.brief);
		$(this).parent().hide();
	});
	
	$('#brfsub').live('click', function(){
	    var url = $('#brfinput').attr('rel');
		var brief = $('#brfinput').val();
		if(brief != blog.brief){
	        $.ajax({
			    type: "POST",
			    url: url,	
			    data: {
				    'brief' : brief
			    },
			    success:function(data){
				    if(data == 0){
				        $('#briefem').html(blog.brief);
				    }else if(data == -1){
                                        showErrorMsg('签名中含有违禁词，请从新编辑!', '消息提示');
                                    }else{
						$('#briefem').html(data);
				    }
					$('#editbrief').parent().show();
				}
			});
		}else{
		    $('#briefem').text(blog.brief).html();
			$('#editbrief').parent().show();
		}
	});
	
	$('#brfcanl').live('click', function(){
		$('#briefem').html(blog.brief);
		$('#editbrief').parent().show();
	});

});
</script>
</head>
<body>
<div class="box">
  <!-- 一级导航 -->
  <div class="Blog_nav1">
    <div class="Blog_nav1_2"><a href="/"><img src="/image/default/1.png"></a><a href="http://www.chinaunix.net" class="Blog_a1">Chinaunix首页</a> | <a href="http://bbs.chinaunix.net" target="_blank">论坛</a> | <a href="http://u.it168.com/vip/"><font color="red">认证专区</font></a> | <a href="http://blog.chinaunix.net" target="_blank">博客</a><span class="Blog_span1"></span>
              <a href="/site/login.html" class="Blog_a1" onclick="linkto()">登录</a> | <a href="http://u.it168.com/Register?webid=5&returnUrl=http%3A%2F%2Fblog.chinaunix.net%2Fuid-24774106-id-4061386.html" class="Blog_a1">注册</a>
          </div>
	<!--自动提示层-->
	<style>
	.bor13221{border:1px #bbb solid;width:206px;position:absolute;top:34px;left:0;background:#fff; z-index:9999;display:none}
	.bor13221 li{height:26px;line-height:26px;padding-left:6px;color:#555;font-size:14px;cursor:pointer;}
	.here{background:#f3f3f3;}
    </style>

	<!--自动提示层-->
    <div class="Blog_nav1_3" style="position:relative; z-index:9999;">
	 <div class="bor13221">
      <ul>
      </ul>
    </div>
	  <form action='/site/search.html' method='post'>
		<input type="text"  autocomplete="off"  class="Blog_txt1" id='search_input_id' name='keywords'>
		<select class="Bolg_sel1" name='type' id='search_type_blog'>
		  <option value='blog'>博文</option>
		  <option value='author'>博主</option>
		</select>
		<input type="submit" value='' name='submit' class="Blog_btn1">
	 </form>
    </div>
    <div class="clear"></div>
    <div class="Blog_nav1_layer1" id="message_slide_div" style="display:none;">
	    <ul>
	    	<li><a href="/message/private.html">私人消息()</a></li>
	    	<li><a href="/message/system.html">系统消息()</a></li>
	    	<li><a href="/member/request.html">好友请求()</a></li>
	    	<li><a href="/member/notification.html">通知管理()</a></li>
	    </ul>
    </div>
  </div>
   <script type="text/javascript">
  	$(function(){
		//点击添加进文本框
		$(".bor13221 li").live( 'click' , function(e){
			if ( e && e.stopPropagation )
			{
				//因此它支持W3C的stopPropagation()方法
				e.stopPropagation();
			}
			else
			{
				//否则，我们需要使用IE的方式来取消事件冒泡
				window.event.cancelBubble = true; 
			}
			$('#search_input_id').val($(this).text());
			$(".bor13221 ul").html('');
			$(".bor13221").hide();
		});
		$(".bor13221 ul li").live({
			mouseenter:
			function()
			{
				$(".bor13221 ul li").removeClass("here");
				$(this).addClass('here');
			},
			mouseleave:
			function()
			{
				$(".bor13221 ul li").removeClass("here");
				$(this).removeClass('here');
			}
		});
		//自动提示
		$('#search_input_id').keyup(function(event){
			//取消博主的提示
			var search_type_blog = $('#search_type_blog').val();
			if(search_type_blog == 'author') return false;

			var key = $(this).val();
			//获取键值
			var keycode = event.which; //38 上 40 下
			var count = $('.bor13221 ul li').length;
			if(key != '' && keycode != 38 && keycode != 40)
			{
				$.getJSON("http://api.sou.it168.com/autoWenKuCloud?jsoncallback=?",{"ty":"json","offset":"0","limit":"10","q":key}, function(result)
					{
						var arr = result.data;

						var html ='';
						for (i=0;i<arr.length ;i++ )   
						{   
							html += '<li>'+arr[i]+'</li>';
						} 
						
						$('.bor13221 ul').html(html);
						(arr.length > 1) ?  $(".bor13221").show() : $(".bor13221").hide();
					}
				);
			}
			else if(keycode == 38)
			{
				if(count > 0)
				{
					//遍历li
					var curr_li_num;
					$('.bor13221 ul li').each(function(index , dom){
						if($(dom).attr('class') == 'here')
						{
							curr_li_num = index;
							return false;
						}
					}); 
					var next_li_num;
					if(typeof(curr_li_num) == 'undefined')
					{
						next_li_num = count - 1;
					}
					else
					{
						if(curr_li_num == 0)
						{
							next_li_num = count - 1;
						}
						else
						{
							next_li_num = curr_li_num - 1;
						}
					}
					$(".bor13221 ul li").removeClass("here");
					$(".bor13221 ul li:eq(" + next_li_num + ")").addClass("here");
					$('#search_input_id').val($(".bor13221 ul li:eq(" + next_li_num + ")").text());
				}
			}
			else if(keycode == 40)
			{
				if(count > 0)
				{
					//遍历li
					var curr_li_num;
					$('.bor13221 ul li').each(function(index , dom){
						if($(dom).attr('class') == 'here')
						{
							curr_li_num = index;
							return false;
						}
					}); 
					var next_li_num;
					if(typeof(curr_li_num) == 'undefined')
					{
						next_li_num = 0;
					}
					else
					{
						if(curr_li_num == count - 1)
						{
							next_li_num = 0;
						}
						else
						{
							next_li_num = curr_li_num + 1;
						}
					}
					$(".bor13221 ul li").removeClass("here");
					$(".bor13221 ul li:eq(" + next_li_num + ")").addClass("here");
					$('#search_input_id').val($(".bor13221 ul li:eq(" + next_li_num + ")").text());
				}
			}
		});
		$(document).click(function(e){
			$(".bor13221").hide();
		});

	});
  </script>
  <!-- 头 -->
  <!-- 推荐博客-->
  <div class="Blog_header1">
	<div class="img1"></div>    <div class="Blog_header1_1">
      <p class="Blog_p1" ><em><a href="/uid/24774106.html">潜心修行</a></em><a href="http://bean.blog.chinaunix.net">bean.blog.chinaunix.net</a></p>      <p class="Blog_p2" style="color:#125A94">谦虚谨慎，平心静气</p>
    </div>
        <div class="Blog_header1_2" id="hide_div1">
    	<span class="Blog_span3"></span>
    	<div class="float_div1" style="white-space:nowrap;" onmouseover="javascript:isMove=false" onmouseout="javascript:isMove=true">
	    <ul id="noticev2">  
		    		    <li><a href="http://blog.chinaunix.net/uid-24789255-id-5568211.html" target="_blank">新注册用户开通“博客写作”功能，需要申请与实名认证 </a></li>
		    		    <li><a href="http://blog.chinaunix.net/uid-10718265-id-5141960.html" target="_blank"> 互动：数据分析与云计算应用案例 （征集|参与）</a></li>
		    		    <li><a href="http://bbs.chinaunix.net/thread-4182662-1-1.html" target="_blank">有奖讨论：企业网络架构的世界真有“试衣间”</a></li>
		    	    </ul>
	    </div>
    </div>
            <div class="Blog_header1_3"><a href="/uid/24774106.html">首页</a>　| 　<a href="/uid/24774106/abstract/1.html">博文目录</a>　| 　<a href="/member/profile/uid/24774106.html">关于我</a></div>
  </div>
    
  <!-- 内容部分 -->
  	<script type="text/javascript" src="/highlight/scripts/XRegExp.js"></script> <!-- XRegExp is bundled with the final shCore.js during build -->
<script type="text/javascript" src="/highlight/scripts/shCore.js"></script>
<script type="text/javascript" src="/highlight/scripts/shAutoloader.js"></script>
<link type="text/css" rel="stylesheet" href="/highlight/styles/shCore.css"/>
<link type="text/css" rel="Stylesheet" href="/highlight/styles/shThemeDefault.css" />
<link href="/code/css/fck_editorarea.css" rel="stylesheet" type="text/css" />
<style>
.Blog_p5 em{ display:inline-block; width:16px; height:13px; background:url(/image/v.jpg) no-repeat; overflow:hidden;}
</style>
  <div class="Blog_contain"> 
    <!-- 左 -->
	<style>
    .Blog_left1_1 p a em { display:inline-block; width:16px; height:13px; background:url(/image/v.jpg) no-repeat; overflow:hidden;}
</style>

<script language="javascript">
$(document).ready(function(){
	$('#ConcernBtn').bind('click',function(){
			var cuid = '24774106';
			var url =  '/member/concern.html';
			var type = $(this).attr('rel');
		
			if(type == 'addConcern'){
				$.ajax({
					type : 'get',
					url  : url,
					data : {'op' : 'ajaxadd' , 'cuid' : cuid, 'random' : Math.random()},
					success : function(msg){	
					   if(msg == -1){
						   showErrorMsg('参数错误！');
					   } else if (msg == 0){
						   showErrorMsg('关注失败，没有该用户！');
					   } else if (msg == 1){
						   showErrorMsg('关注失败，您已经关注了该用户！');
					   } else if (msg == 2){
						   $('#ConcernBtn').val('已关注');
						   $('#ConcernBtn').attr('rel','delConcern');
						   showSucceedMsg('关注成功!');
					   } else if (msg == 3){
						   showErrorMsg('未知错误');
					   }
					}
				});	
			} else if ( type == 'delConcern'){
				$.ajax({
					type : 'get',
					url  : url,
					data : {'op' : 'ajaxdel' , 'cuid' : cuid, 'random' : Math.random()},
					success : function(msg){
					   if(msg == 0){
						   showErrorMsg('参数错误！','消息提示');
					   } else if (msg == 1){
						   showErrorMsg('操作失败，请尝试刷新页面重试！','消息提示');
					   } else if (msg == 2){
						   $('#ConcernBtn').val('加关注');
						   $('#ConcernBtn').attr('rel','addConcern');
						   showSucceedMsg('成功取消关注！','消息提示');
					   } else if (msg == 3){
						   showErrorMsg('未知错误！','消息提示'); 
					   }
					}
				});	
			}
	});					   
});

//加好友
function addFriend(fuid, url){
	if(fuid == '' || fuid.length == 0){
		showErrorMsg('缺少参数！','信息提示');
		return false;
	}
	$.ajax({
		   type : 'get',
		   url : url,
		   data : {'op' : 'add', 'fuid' : fuid , 'random' : Math.random()},
		   success : function(msg){
				if(msg == -1){
					showErrorMsg('参数错误！','消息提示');
				} else if (msg == -2){
					showErrorMsg('添加好友失败,没有该用户的信息！','消息提示');
				} else if (msg == -3){
					showErrorMsg('添加好友失败,你不能添加自己为好友！','消息提示');
				} else if (msg == -4){
					showErrorMsg('添加好友未知错误,该错误已被记录！','消息提示');
				} else if (msg == -5){
					showErrorMsg('添加好友失败,你之前已经发送过好友请求,请耐心等待对方同意申请！','消息提示');
				} else if (msg == -6){
					showErrorMsg('添加好友失败,你们已经是好友了！','消息提示');
				} else {
					$.cover(true);
					asyncbox.open({
						id : 'addFriend',
						title : '添加好友',
						url : url,
						data : {'op' : 'add', 'fuid' : fuid , 'random' : Math.random()},
						width : 490,
						height : 180,
						scroll : 'no',
						callback : function(action) {
							if (action == 'close'){
								$.cover(false);
							}	
						}
					});	
				}
		   }
	});	
	
}

//发送短消息
function postMessage(msguid, url){
	if(msguid == '' || msguid.length == 0){
		showErrorMsg('缺少参数！','信息提示');
		return false;
	}
	
	$.ajax({
		   type : 'post',
		   url : url,
		   data : {'op' : 'ajaxpost', 'msguid' : msguid , 'random' : Math.random()},
		   success : function(msg){
				if(msg == -1){
					showErrorMsg('发送失败，缺少收件人对象！','消息提示');
				} else if(msg == -2){
					showErrorMsg('发送失败，自己不能给自己发送短消息！','消息提示');
				} else {
					$.cover(true);
					asyncbox.open({
						id : 'postMessage',
						title : '发送短消息',
						url : url,
						data : {'op' : 'ajaxpost', 'msguid' : msguid , 'random' : Math.random()},
						width : 510,
						height : 255,
						scroll : 'no',
						callback : function(action) {
							if (action == 'close'){
								$.cover(false);
							}	
						}
					});	
				}
		   }
	});	
}

</script>
<div class="Blog_left">
      <div class="Blog_left1 Blog_bg1">
        <div class="Blog_left1_1">
			<div class="img"></div><!-- 专家博客-->
			<a href="/uid/24774106.html">                            <img src="http://passport.ixpub.net/avatar.php?uid=24774106&size=middle" />
                        </a>
                        <p><a href="/uid/24774106.html">Bean_lee</a></p>
                     </div>
        <ul class="Blog_ul1 Blog_noline1">
          <li>博客访问： 2463091 </li>
          <li>博文数量： 167 </li>
          <li>博客积分： 3918 </li>
          <!--<li>专家积分： 180</li>-->
          <li>博客等级： 少校 </li>
		  <li>技术积分： 8287 </li>
          <li>用  户  组：  普通用户</li>
          <li>注册时间： 2010-10-17 13:52 </li>
                            </ul>  


        
                <div class="HT_line3 HT_line3_1"></div>
        <ul class="Blog_ul2">
          <li><input type="button" value="加关注" id="ConcernBtn" onclick="showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html')"></li>
          <li><input type="button" value="短消息" id="postMessageBtn" onclick="showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html')"></li>
          <li><input type="button" value="论坛" onclick="location.href='http://bbs.chinaunix.net'"></li>
          <li><input type="button" value="加好友" id="addFriendBtn" onclick="showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html')"></li>
        </ul>
              </div>
            <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">个人简介</div>
        <p class="Blog_p3">个人微薄： weibo.com/manuscola</p>
      </div>
        
         
      <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">文章分类</div>
        <div class="Blog_left2_1">
          <p class="Blog_p4"><a href="/uid/24774106/list/1.html">全部博文</a>（167）</p>
          <ul id="blogCla">
                            <li><a href="/uid/24774106/cid-210758-list-1.html" title="ceph">ceph</a>（5）
                                </li>
                            <li><a href="/uid/24774106/cid-184259-list-1.html" title="Go">Go</a>（7）
                                </li>
                            <li><a href="/uid/24774106/cid-171664-list-1.html" title="LISP">LISP</a>（3）
                                </li>
                            <li><a href="/uid/24774106/cid-160451-list-1.html" title="shell">shell</a>（8）
                                </li>
                            <li><a href="/uid/24774106/cid-159670-list-1.html" title="UI">UI</a>（3）
                                </li>
                            <li><a href="/uid/24774106/cid-155181-list-1.html" title="DB">DB</a>（14）
                                </li>
                            <li><a href="/uid/24774106/cid-152154-list-1.html" title="PHP">PHP</a>（0）
                                </li>
                            <li><a href="/uid/24774106/cid-142890-list-1.html" title="杂文">杂文</a>（1）
                                </li>
                            <li><a href="/uid/24774106/cid-106788-list-1.html" title="Assembly">Assembly</a>（2）
                                </li>
                            <li><a href="/uid/24774106/cid-93677-list-1.html" title="Python">Python</a>（1）
                                </li>
                            <li><a href="/uid/24774106/cid-28706-list-1.html" title="Linux">Linux</a>（28）
                                </li>
                            <li><a href="/uid/24774106/cid-21044-list-1.html" title="C">C</a>（9）
                                </li>
                            <li><a href="/uid/24774106/cid-21045-list-1.html" title="algorthm">algorthm</a>（34）
                                </li>
                            <li><a href="/uid/24774106/cid-21046-list-1.html" title="Linux Kernel">Linux Kernel</a>（32）
                                </li>
                            <li><a href="/uid/24774106/cid-21043-list-1.html" title="编译链接">编译链接</a>（18）
                                </li>
                            <li><a href="/uid/24774106/cid-21042-list-1.html" title="NETWORK">NETWORK</a>（2）
                                </li>
                            <li><a href="/uid/24774106/cid--1-list-1.html" title="未分配的博文">未分配的博文</a>（0）
                                </li>
                      </ul>
        </div>
      </div>
      	              <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">文章存档</div>
        <div class="Blog_left2_1" id="blogdtr">
                    <p class="Blog_p4"><span class="Blog_jia1"></span><a href="/uid/24774106/year-2016-list-1.html">2016年</a>（3）</p>
          <ul style="display:none;" class="Blog_ul3 zk">
                        <li><a href="/uid/24774106/year-201603-list-1.html">2016年03月</a>（3）</li>
                      </ul>
                    <p class="Blog_p4"><span class="Blog_jia1"></span><a href="/uid/24774106/year-2015-list-1.html">2015年</a>（2）</p>
          <ul style="display:none;" class="Blog_ul3 zk">
                        <li><a href="/uid/24774106/year-201505-list-1.html">2015年05月</a>（2）</li>
                      </ul>
                    <p class="Blog_p4"><span class="Blog_jia1"></span><a href="/uid/24774106/year-2014-list-1.html">2014年</a>（5）</p>
          <ul style="display:none;" class="Blog_ul3 zk">
                        <li><a href="/uid/24774106/year-201402-list-1.html">2014年02月</a>（1）</li>
                        <li><a href="/uid/24774106/year-201401-list-1.html">2014年01月</a>（4）</li>
                      </ul>
                    <p class="Blog_p4"><span class="Blog_jia1"></span><a href="/uid/24774106/year-2013-list-1.html">2013年</a>（55）</p>
          <ul style="display:none;" class="Blog_ul3 zk">
                        <li><a href="/uid/24774106/year-201312-list-1.html">2013年12月</a>（2）</li>
                        <li><a href="/uid/24774106/year-201311-list-1.html">2013年11月</a>（8）</li>
                        <li><a href="/uid/24774106/year-201310-list-1.html">2013年10月</a>（4）</li>
                        <li><a href="/uid/24774106/year-201309-list-1.html">2013年09月</a>（3）</li>
                        <li><a href="/uid/24774106/year-201308-list-1.html">2013年08月</a>（2）</li>
                        <li><a href="/uid/24774106/year-201307-list-1.html">2013年07月</a>（4）</li>
                        <li><a href="/uid/24774106/year-201306-list-1.html">2013年06月</a>（8）</li>
                        <li><a href="/uid/24774106/year-201305-list-1.html">2013年05月</a>（7）</li>
                        <li><a href="/uid/24774106/year-201304-list-1.html">2013年04月</a>（4）</li>
                        <li><a href="/uid/24774106/year-201303-list-1.html">2013年03月</a>（4）</li>
                        <li><a href="/uid/24774106/year-201302-list-1.html">2013年02月</a>（4）</li>
                        <li><a href="/uid/24774106/year-201301-list-1.html">2013年01月</a>（5）</li>
                      </ul>
                    <p class="Blog_p4"><span class="Blog_jia1"></span><a href="/uid/24774106/year-2012-list-1.html">2012年</a>（36）</p>
          <ul style="display:none;" class="Blog_ul3 zk">
                        <li><a href="/uid/24774106/year-201212-list-1.html">2012年12月</a>（7）</li>
                        <li><a href="/uid/24774106/year-201211-list-1.html">2012年11月</a>（5）</li>
                        <li><a href="/uid/24774106/year-201210-list-1.html">2012年10月</a>（2）</li>
                        <li><a href="/uid/24774106/year-201209-list-1.html">2012年09月</a>（3）</li>
                        <li><a href="/uid/24774106/year-201208-list-1.html">2012年08月</a>（4）</li>
                        <li><a href="/uid/24774106/year-201207-list-1.html">2012年07月</a>（4）</li>
                        <li><a href="/uid/24774106/year-201206-list-1.html">2012年06月</a>（5）</li>
                        <li><a href="/uid/24774106/year-201204-list-1.html">2012年04月</a>（4）</li>
                        <li><a href="/uid/24774106/year-201202-list-1.html">2012年02月</a>（1）</li>
                        <li><a href="/uid/24774106/year-201201-list-1.html">2012年01月</a>（1）</li>
                      </ul>
                    <p class="Blog_p4"><span class="Blog_jia1"></span><a href="/uid/24774106/year-2011-list-1.html">2011年</a>（60）</p>
          <ul style="display:none;" class="Blog_ul3 zk">
                        <li><a href="/uid/24774106/year-201112-list-1.html">2011年12月</a>（7）</li>
                        <li><a href="/uid/24774106/year-201111-list-1.html">2011年11月</a>（3）</li>
                        <li><a href="/uid/24774106/year-201110-list-1.html">2011年10月</a>（4）</li>
                        <li><a href="/uid/24774106/year-201109-list-1.html">2011年09月</a>（6）</li>
                        <li><a href="/uid/24774106/year-201108-list-1.html">2011年08月</a>（14）</li>
                        <li><a href="/uid/24774106/year-201107-list-1.html">2011年07月</a>（5）</li>
                        <li><a href="/uid/24774106/year-201106-list-1.html">2011年06月</a>（8）</li>
                        <li><a href="/uid/24774106/year-201105-list-1.html">2011年05月</a>（10）</li>
                        <li><a href="/uid/24774106/year-201103-list-1.html">2011年03月</a>（1）</li>
                        <li><a href="/uid/24774106/year-201102-list-1.html">2011年02月</a>（2）</li>
                      </ul>
                    <p class="Blog_p4"><span class="Blog_jia1"></span><a href="/uid/24774106/year-2010-list-1.html">2010年</a>（6）</p>
          <ul style="display:none;" class="Blog_ul3 zk">
                        <li><a href="/uid/24774106/year-201012-list-1.html">2010年12月</a>（2）</li>
                        <li><a href="/uid/24774106/year-201010-list-1.html">2010年10月</a>（4）</li>
                      </ul>
                  </div>
      </div>
      	  	        <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">我的朋友</div>
        <ul class="Blog_ul4">
                    <li><a href="/uid/31377647.html">              <img src="http://passport.ixpub.net/avatar.php?uid=31377647&size=small" />
              </a>
            <p><a href="/uid/31377647.html" title="liangwei0113">liangwei</a></p>
          </li>
                    <li><a href="/uid/26466476.html">              <img src="http://passport.ixpub.net/avatar.php?uid=26466476&size=small" />
              </a>
            <p><a href="/uid/26466476.html" title="jiaogeshahaone">jiaogesh</a></p>
          </li>
                    <li><a href="/uid/31041732.html">              <img src="http://passport.ixpub.net/avatar.php?uid=31041732&size=small" />
              </a>
            <p><a href="/uid/31041732.html" title="lraine">lraine</a></p>
          </li>
                    <li><a href="/uid/30820507.html">              <img src="http://passport.ixpub.net/avatar.php?uid=30820507&size=small" />
              </a>
            <p><a href="/uid/30820507.html" title="kangkangrun">kangkang</a></p>
          </li>
                    <li><a href="/uid/30362090.html">              <img src="http://passport.ixpub.net/avatar.php?uid=30362090&size=small" />
              </a>
            <p><a href="/uid/30362090.html" title="王帅阳">王帅阳</a></p>
          </li>
                    <li><a href="/uid/30881302.html">              <img src="http://passport.ixpub.net/avatar.php?uid=30881302&size=small" />
              </a>
            <p><a href="/uid/30881302.html" title="眼睛去旅行365">眼睛去旅</a></p>
          </li>
                    <li><a href="/uid/13776576.html">              <img src="http://passport.ixpub.net/avatar.php?uid=13776576&size=small" />
              </a>
            <p><a href="/uid/13776576.html" title="oxwangfeng">oxwangfe</a></p>
          </li>
                    <li><a href="/uid/29749178.html">              <img src="http://passport.ixpub.net/avatar.php?uid=29749178&size=small" />
              </a>
            <p><a href="/uid/29749178.html" title="wzy719">wzy719</a></p>
          </li>
                    <li><a href="/uid/29482215.html">              <img src="http://passport.ixpub.net/avatar.php?uid=29482215&size=small" />
              </a>
            <p><a href="/uid/29482215.html" title="butterfly_c">butterfl</a></p>
          </li>
                  </ul>
      </div>
	  	        <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">最近访客</div>
        <ul class="Blog_ul4">
                    <li><a href="/uid/31446120.html">              <img src="http://passport.ixpub.net/avatar.php?uid=31446120&size=small" />
              </a>
            <p><a href="/uid/31446120.html" title="郭大气儿">郭大气儿</a></p>
          </li>
                    <li><a href="/uid/26575462.html">              <img src="http://passport.ixpub.net/avatar.php?uid=26575462&size=small" />
              </a>
            <p><a href="/uid/26575462.html" title="iiewang">iiewang</a></p>
          </li>
                    <li><a href="/uid/195532.html">              <img src="http://passport.ixpub.net/avatar.php?uid=195532&size=small" />
              </a>
            <p><a href="/uid/195532.html" title="narry">narry</a></p>
          </li>
                    <li><a href="/uid/28748002.html">              <img src="http://passport.ixpub.net/avatar.php?uid=28748002&size=small" />
              </a>
            <p><a href="/uid/28748002.html" title="qq948299114">qq948299</a></p>
          </li>
                    <li><a href="/uid/47131.html">              <img src="http://passport.ixpub.net/avatar.php?uid=47131&size=small" />
              </a>
            <p><a href="/uid/47131.html" title="听峰">听峰</a></p>
          </li>
                    <li><a href="/uid/26802056.html">              <img src="http://passport.ixpub.net/avatar.php?uid=26802056&size=small" />
              </a>
            <p><a href="/uid/26802056.html" title="mardteabk201">mardteab</a></p>
          </li>
                    <li><a href="/uid/29648337.html">              <img src="http://passport.ixpub.net/avatar.php?uid=29648337&size=small" />
              </a>
            <p><a href="/uid/29648337.html" title="cierory">cierory</a></p>
          </li>
                    <li><a href="/uid/31446424.html">              <img src="http://passport.ixpub.net/avatar.php?uid=31446424&size=small" />
              </a>
            <p><a href="/uid/31446424.html" title="vrsjzj">vrsjzj</a></p>
          </li>
                    <li><a href="/uid/30093195.html">              <img src="http://passport.ixpub.net/avatar.php?uid=30093195&size=small" />
              </a>
            <p><a href="/uid/30093195.html" title="cdsfiui">cdsfiui</a></p>
          </li>
                  </ul>
      </div>
	           <div  class="Blog_left2 Blog_left3 Blog_bg1">
        <div class="Blog_tit1">微信关注</div>
        <div class="">
                <div class="" style="float:left; margin-right:5px;">
                 <img width="90" height="90" alt="" src="/image/IT168.jpg"/>
                 </div><br>
                <div class="" style="margin-top:10px;">
                 <p class="">
                         IT168企业级官微
                </p>
                 <p class="">

                 <br></br>
                 微信号：IT168qiye
                </p>
                </div>
        </div>
<hr size="1" style="clear:both;">
        <div class="" style="clear:both;">
                <div class="" style="float:left; margin-right:5px;">
                 <img width="90" height="90" alt="" src="/image/itpub.jpg"/>
                 </div><br>
                <div class="" style="margin-top:10px;">
                 <p class="">
                         系统架构师大会
                </p>
                 <p class="">

                 <br></br>
                 微信号：SACC2013
                </p>
                </div>
        </div>

</div>
      <div class="Blog_left2 Blog_bg1">
        <div class="Blog_tit1">订阅</div>
        <ul class="Blog_ul5">
          <li><a href="/blog/rss/uid/24774106.html" class="Blog_a4"></a></li>
          <li><a href="http://www.google.com/ig/add?feedurl=http%3A%2F%2Fblog.chinaunix.net%2Fuid%2F24774106.html" class="Blog_a5"></a></li>
        </ul>
      </div>
      <div class="Blog_left2 Blog_left3 Blog_bg1">
        <div class="Blog_tit1">推荐博文</div>
        <ul class="Blog_ul6">
				  			<li>·<a href="/uid-192452-id-5762362.html" title="一个pycharm引起ubuntu桌面丢失的惨案">一个pycharm引起ubuntu桌面丢...</a></li>
		  			<li>·<a href="/uid-31446284-id-5762324.html" title="mysql多实例的配置和管理">mysql多实例的配置和管理...</a></li>
		  			<li>·<a href="/uid-26668652-id-5762320.html" title=" [转载]Linux系统对IO内存和IO端口的管理 "> [转载]Linux系统对IO内存和I...</a></li>
		  			<li>·<a href="/uid-31343710-id-5762310.html" title="lua中使用luasocket通信，写了一个简单的事件库">lua中使用luasocket通信，写...</a></li>
		  			<li>·<a href="/uid-28500701-id-5762309.html" title="解析linux根文件系统的挂载过程">解析linux根文件系统的挂载过...</a></li>
		  						  			<li>·<a href="http://blog.itpub.net/26736162/viewspace-2136412" title="Oracle11gR2集群心跳单网卡改bond实施方案">Oracle11gR2集群心跳单网卡改...</a></li>
		  			<li>·<a href="http://blog.itpub.net/23718752/viewspace-2136380" title="swingbench压测Oracle小记(r12笔记第19天)">swingbench压测Oracle小记(r1...</a></li>
		  			<li>·<a href="http://blog.itpub.net/26736162/viewspace-2136339" title="【优化】COUNT(1)、COUNT(*)、COUNT(常量)、COUNT(主键)、COUNT(ROWID)等">【优化】COUNT(1)、COUNT(*)...</a></li>
		  			<li>·<a href="http://blog.itpub.net/26736162/viewspace-2136332" title="Oracle事件之10053 跟踪的trace文件相关解释">Oracle事件之10053 跟踪的tra...</a></li>
		  			<li>·<a href="http://blog.itpub.net/23718752/viewspace-2136328" title="一个ORA-00600问题的简单分析(r12笔记第18天)">一个ORA-00600问题的简单分析...</a></li>
		  				
        </ul>
      </div>
      <div class="Blog_left2 Blog_left3 Blog_bg1">
        <div class="Blog_tit1">热词专题</div>
        <ul class="Blog_ul6">
                        <li class="no_line1">·<a href="/zt/1000/linux_1000000.shtml" target='blank' title='lua编译(linux)'>lua编译(linux)</a></li>
          <!--              <li>·<a href="http://www.dataguru.cn/zhuanti/hadoop220peizhi.shtml" target='blank' title='配置hadoop2.2.0格式化namenode问题'></a></li>
              <li>·<a href="http://www.dataguru.cn/zhuanti/hadoopshouce.shtml" target='blank' title='hadoop2.2.0安装手册'></a></li>-->
        </ul>
      </div>
	  

	</div>
<script language="javascript">
$(document).ready(function(){
    /*目录树JS效果*/
	$('#blogCla li > span').click(function(){
		var cla = $(this).attr('class');
		if(cla == 'Blog_jia1'){
			//$('#blogCla li > span').removeClass('Blog_jian1').addClass('Blog_jia1');
			//$('#blogCla li > .zk').css('display', 'none');
				
			$(this).removeClass('Blog_jia1').addClass('Blog_jian1');
            $(this).parent().children('.zk').css('display', 'block');
		}else{
			$(this).removeClass('Blog_jian1').addClass('Blog_jia1');
            $(this).parent().children('.zk').css('display', 'none');
		}
	});
		
	$('#blogdtr > p > span').click(function(){
		var cla = $(this).attr('class');
		if(cla == 'Blog_jia1'){
			//$('#blogdtr > .Blog_p4 > span').removeClass('Blog_jian1').addClass('Blog_jia1');
			//$('#blogdtr ul').css('display', 'none');
				
			$(this).removeClass('Blog_jia1').addClass('Blog_jian1');
            $(this).parent().next().css('display', 'block');
		}else{
			$(this).removeClass('Blog_jian1').addClass('Blog_jia1');
            $(this).parent().next().css('display', 'none');
		}
	});
});
</script>    <!-- 右 -->
    <div class="Blog_right1">
      <div class="Blog_right1_1 Blog_right1_11">
        <div class="Blog_right1_2 ">
			<!--推荐博文-->
          <div class="Blog_tit4 Blog_tit5">
                        <b class="Blog_b1"></b>
            <a href="/uid-24774106-id-4061386.html">Linux signal那些事儿</a>
            <em>2014-01-01 20:32:51</em>
          </div>
          <div class="Blog_con2">
            <div class="Blog_con3">
              <p>分类： <span>LINUX</span></p>
			                </p>
            </div>
           <div class="Blog_wz1" style='word-wrap: break-word;'>
						<span style="font-size:14px;"><span style="line-height:2;">&nbsp; &nbsp; Linux编程，信号是一个让人爱恨交加又不得不提的一个领域。最近我集中学习了Linux的signal相关的内容，分享出来，也为防止自己忘记。</span><br />
<span style="line-height:2;"> &nbsp; &nbsp; 信号的本质是异步。异步一这个词，听着高端大气上档次，又让人云山雾绕，其则不然。其实我们想想，我们这个世界是异步的，每个人干事儿，并不总是A->B->C->D这种。比如我在网上买了东西，我其实并不知道快递几时能到。我可能在公司里面，在喝水，在回邮件，在查bug，在写代码，突然收到了快递小哥的电话，注意这就是信号的delivery。由于快递的到来，我不得不停下我手头的活儿，去签收快递。这就是传说中的典型的异步。我不知道快递小哥几时给我电话，但是我收到电话就去签收，这是我的信号处理函数。更高级一点，如果我在参加重要的会议，我可能需要屏蔽快递小哥的电话（假如我知道其电话），这已经是linux下信号的高级应用(sigprocmask)了。</span><br />
<span style="line-height:2;"> &nbsp; &nbsp; 信号是一种机制，是在软件层次对中断机制的一种模拟，内核让某进程意识到某特殊事情发生了。强迫进程去执行相应的信号处理函数。至于信号的来源可能来自硬件如按下键盘或者硬件故障（如ctrl+c发送SIGINT），可能来自其他进程（kill，sigqueue），可能来自自己进程（raise）。&nbsp;</span><br />
<span style="line-height:2;"> &nbsp; &nbsp; 信号的本质是一种进程间的通信，一个进程可以向另一个进程发送信号，至少传递了signo这个int值。实际上，通信的内容，可以远不止是signo，可以通过SA_SIGINFO标志位通知进程去取额外的信息。</span><br />
<span style="line-height:2;"> &nbsp; &nbsp; 我痛恨片汤话儿，可是上面一大坨片汤话儿，却真真的道出了信号的本质。</span><br />
<span style="line-height:2;"> &nbsp; &nbsp; 前面也提到了，signal是个让人爱恨交加的feature，原因在于沉重的历史包袱。下面我将一一道来。</span><br />
<span style="line-height:2;"> &nbsp; &nbsp; 在上古时期，UNIX就已经有了signal这个feature，但是当时的signal存在几个问题：</span><br />
<span style="line-height:2;"> &nbsp; </span><strong style="line-height:2;">&nbsp;1 传统的信号处理函数是一次性的，而非永久性的。</strong><br />
<span style="line-height:2;"> &nbsp; &nbsp; linux为了向下兼容，依然实现了这个有缺陷的signal系统调用。你可看到signal系统调用的内核代码中有SA_ONESHOT这个标志位。</span><br />
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;">#ifdef __ARCH_WANT_SYS_SIGNAL<br />
</span> 
		</li>
		<li>
			/<span style="color:#0000CC;">*</span><br />
		</li>
		<li>
			&nbsp;<span style="color:#0000CC;">*</span> <span style="color:#0000FF;">For</span> backwards compatibility<span style="color:#0000CC;">.</span> Functionality superseded by sigaction<span style="color:#0000CC;">.</span><br />
		</li>
		<li>
			&nbsp;<span style="color:#0000CC;">*</span><span style="color:#0000CC;">/</span><br />
		</li>
		<li>
			SYSCALL_DEFINE2<span style="color:#0000CC;">(</span>signal<span style="color:#0000CC;">,</span> <span style="color:#0000FF;">int</span><span style="color:#0000CC;">,</span> sig<span style="color:#0000CC;">,</span> __sighandler_t<span style="color:#0000CC;">,</span> handler<span style="color:#0000CC;">)</span><br />
		</li>
		<li>
			{<br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">struct</span> k_sigaction new_sa<span style="color:#0000CC;">,</span> old_sa<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span> <span style="color:#0000FF;">ret</span><span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			<br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;new_sa<span style="color:#0000CC;">.</span>sa<span style="color:#0000CC;">.</span>sa_handler <span style="color:#0000CC;">=</span> handler<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;new_sa<span style="color:#0000CC;">.</span>sa<span style="color:#0000CC;">.</span>sa_flags <span style="color:#0000CC;">=</span> SA_ONESHOT <span style="color:#0000CC;">|</span> SA_NOMASK<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;sigemptyset<span style="color:#0000CC;">(</span><span style="color:#0000CC;">&</span>new_sa<span style="color:#0000CC;">.</span>sa<span style="color:#0000CC;">.</span>sa_mask<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			<br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">ret</span> <span style="color:#0000CC;">=</span> do_sigaction<span style="color:#0000CC;">(</span>sig<span style="color:#0000CC;">,</span> &new_sa<span style="color:#0000CC;">,</span> &old_sa<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			<br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;return <span style="color:#0000FF;">ret</span> <span style="color:#0000CC;">?</span> <span style="color:#0000FF;">ret</span> <span style="color:#0000CC;">:</span> <span style="color:#0000CC;">(</span>unsigned long<span style="color:#0000CC;">)</span>old_sa<span style="color:#0000CC;">.</span>sa<span style="color:#0000CC;">.</span>sa_handler<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			}<br />
		</li>
		<li>
			#<span style="color:#0000FF;">endif</span> /<span style="color:#0000CC;">*</span> __ARCH_WANT_SYS_SIGNAL <span style="color:#0000CC;">*</span><span style="color:#0000CC;">/</span> 
		</li>
	</ol>
</div>
<span style="line-height:2;">&nbsp; &nbsp; 这个SA_ONESHOT标志位，等同于SA_RESETHAND标志：在arch/x86/include/uapi/asm/signal.h中有：</span><br />
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;">#define SA_ONESHOT&nbsp;&nbsp;&nbsp;&nbsp;SA_RESETHAND</span> 
		</li>
	</ol>
</div>
<span style="line-height:2;">&nbsp; &nbsp; 信号产生，到信号处理函数开始执行，中间肯定是有时间差的。内核开始开始强迫进程对信号作出响应，这叫作信号的传递。也就是说信号产生，内核只是在进程描述符记录了一笔，该进程收到信号X一枚，并没有马上强迫进程对信号作出响应。已经产生但尚未传递的信号叫挂起信号。对于非实时而言，信号不排队，位图占个位即可。对于实时信号，则排队，同一信号可能有多个挂起信号。这个不多说，后面自然提到。</span><br />
<span style="line-height:2;"> &nbsp;&nbsp;&nbsp;&nbsp;<img src="/attachment/201401/1/24774106_1388566535RBIr.png" width="600" height="331" alt="" /></span><br />
<span style="line-height:2;"> &nbsp; &nbsp; 上图反映了内核如何传递信号。基本就是选择一个挂起信号，然后处理一个信号。get_signal_to_deliver 是在进程中选择一个信号来handle。代码在kernel/signal.c，其中有如下code：</span><br />
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;"><span style="color:#0000FF;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if</span> <span style="color:#0000CC;">(</span>ka<span style="color:#0000CC;">-</span><span style="color:#0000CC;">></span>sa<span style="color:#0000CC;">.</span>sa_handler <span style="color:#0000CC;">=</span><span style="color:#0000CC;">=</span> SIG_IGN<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">/</span><span style="color:#0000CC;">*</span> <span style="color:#0000FF;">Do</span> <span style="color:#0000FF;">nothing</span><span style="color:#0000CC;">.</span> <span style="color:#0000CC;">*</span><span style="color:#0000CC;">/</span><br />
</span> 
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;continue<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>ka<span style="color:#0000CC;">-</span><span style="color:#0000CC;">></span>sa<span style="color:#0000CC;">.</span>sa_handler <span style="color:#0000CC;">!</span><span style="color:#0000CC;">=</span> SIG_DFL<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">{</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">/</span><span style="color:#0000CC;">*</span> Run the handler<span style="color:#0000CC;">.</span> <span style="color:#0000CC;">*</span><span style="color:#0000CC;">/</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">*</span>return_ka <span style="color:#0000CC;">=</span> <span style="color:#0000CC;">*</span>ka<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			<br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;background-color:#FF9900;">if</span> <span style="color:#0000CC;background-color:#FF9900;">(</span><span style="background-color:#FF9900;">ka</span><span style="color:#0000CC;background-color:#FF9900;">-</span><span style="color:#0000CC;background-color:#FF9900;">></span><span style="background-color:#FF9900;">sa</span><span style="color:#0000CC;background-color:#FF9900;">.</span><span style="background-color:#FF9900;">sa_flags </span><span style="color:#0000CC;background-color:#FF9900;">&</span><span style="background-color:#FF9900;"> SA_ONESHOT</span><span style="color:#0000CC;background-color:#FF9900;">)</span><br />
		</li>
		<li>
			<span style="background-color:#FF9900;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ka</span><span style="color:#0000CC;background-color:#FF9900;">-</span><span style="color:#0000CC;background-color:#FF9900;">></span><span style="background-color:#FF9900;">sa</span><span style="color:#0000CC;background-color:#FF9900;">.</span><span style="background-color:#FF9900;">sa_handler </span><span style="color:#0000CC;background-color:#FF9900;">=</span><span style="background-color:#FF9900;"> SIG_DFL</span><span style="color:#0000CC;background-color:#FF9900;">;</span><br />
		</li>
		<li>
			<br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break<span style="color:#0000CC;">;</span> <span style="color:#0000CC;">/</span><span style="color:#0000CC;">*</span> will return non<span style="color:#0000CC;">-</span>zero <span style="color:#FF00FF;">"signr"</span> value <span style="color:#0000CC;">*</span><span style="color:#0000CC;">/</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span> 
		</li>
	</ol>
</div>
<span style="line-height:2;">&nbsp; &nbsp; 我们看到了linux也实现了signal这个有缺陷的系统调用。传统的signal系统调用，他的信号处理函数是一次性的，执行过后，该信号的信号处理函数就变成了SIG_DFL。</span><br />
<span style="line-height:2;"> &nbsp; &nbsp; 值得一提的是，glibc的signal函数，调用的已经不是传统的signal系统调用，而是rt_sigaction系统调用，这种一次性的缺陷早已经解决了。怎么证明：&nbsp;</span><br />
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;">manu@manu<span style="color:#0000CC;">-</span>hacks<span style="color:#0000CC;">:</span><span style="color:#0000CC;">~</span><span style="color:#0000CC;">/</span>code<span style="color:#0000CC;">/</span>c<span style="color:#0000CC;">/</span>self<span style="color:#0000CC;">/</span>signal$ cat signal_fault_1<span style="color:#0000CC;">.</span>c <br />
</span> 
		</li>
		<li>
			#include <span style="color:#0000CC;"><</span>stdio<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">></span><br />
		</li>
		<li>
			#include <span style="color:#0000CC;"><</span>stdlib<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">></span><br />
		</li>
		<li>
			#include <span style="color:#0000CC;"><</span>signal<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">></span><br />
		</li>
		<li>
			#include <span style="color:#0000CC;"><</span><span style="color:#FF0000;">string</span><span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">></span><br />
		</li>
		<li>
			#include <span style="color:#0000CC;"><</span>errno<span style="color:#0000CC;">.</span>h<span style="color:#0000CC;">></span><br />
		</li>
		<li>
			<br />
		</li>
		<li>
			#define MSG <span style="color:#FF00FF;">"OMG , I catch the signal SIGINT\n"</span><br />
		</li>
		<li>
			#define MSG_END <span style="color:#FF00FF;">"OK,finished process signal SIGINT\n"</span><br />
		</li>
		<li>
			<span style="color:#FF0000;">int</span> do_heavy_work<span style="color:#0000CC;">(</span><span style="color:#0000CC;">)</span><br />
		</li>
		<li>
			<span style="color:#0000CC;">{</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF0000;">int</span> i <span style="color:#0000CC;">;</span> <br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#FF0000;">int</span> k<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;srand<span style="color:#0000CC;">(</span><span style="color:#FF0000;">time</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">NULL</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			<br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">for</span><span style="color:#0000CC;">(</span>i <span style="color:#0000CC;">=</span> 0 <span style="color:#0000CC;">;</span> i <span style="color:#0000CC;"><</span> 100000000<span style="color:#0000CC;">;</span>i<span style="color:#0000CC;">+</span><span style="color:#0000CC;">+</span><span style="color:#0000CC;">)</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k <span style="color:#0000CC;">=</span> rand<span style="color:#0000CC;">(</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">%</span>1234589<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br />
		</li>
		<li>
			<br />
		</li>
		<li>
			<span style="color:#0000CC;">}</span><br />
		</li>
		<li>
			<br />
		</li>
		<li>
			void signal_handler<span style="color:#0000CC;">(</span><span style="color:#FF0000;">int</span> signo<span style="color:#0000CC;">)</span><br />
		</li>
		<li>
			<span style="color:#0000CC;">{</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;write<span style="color:#0000CC;">(</span>2<span style="color:#0000CC;">,</span>MSG<span style="color:#0000CC;">,</span>strlen<span style="color:#0000CC;">(</span>MSG<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;do_heavy_work<span style="color:#0000CC;">(</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;write<span style="color:#0000CC;">(</span>2<span style="color:#0000CC;">,</span>MSG_END<span style="color:#0000CC;">,</span>strlen<span style="color:#0000CC;">(</span>MSG_END<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			<span style="color:#0000CC;">}</span><br />
		</li>
		<li>
			<br />
		</li>
		<li>
			<span style="color:#FF0000;">int</span> main<span style="color:#0000CC;">(</span><span style="color:#0000CC;">)</span><br />
		</li>
		<li>
			<span style="color:#0000CC;">{</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;char input<span style="color:#0000CC;">[</span>1024<span style="color:#0000CC;">]</span> <span style="color:#0000CC;">=</span> <span style="color:#0000CC;">{</span>0<span style="color:#0000CC;">}</span><span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			<span style="color:#0000CC;"><br />
</span> 
		</li>
		<li>
			<span style="background-color:#FF9900;">#if defined TRADITIONAL_SIGNAL_API</span><br />
<span style="background-color:#FF9900;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="background-color:#FF9900;">if(syscall(SYS_signal ,SIGINT,signal_handler) == -1)</span><br />
<span style="background-color:#FF9900;">#elif defined SYSTEMV_SIGNAL_API</span><br />
<span style="background-color:#FF9900;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="background-color:#FF9900;">if(sysv_signal(SIGINT,signal_handler) == -1)</span><br />
<span style="background-color:#FF9900;">#else</span><br />
<span style="background-color:#FF9900;">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="background-color:#FF9900;">if(signal(SIGINT,signal_handler) == SIG_ERR)</span><br />
<span style="background-color:#FF9900;">#endif</span><br />
		</li>
		<li>
			<br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fprintf<span style="color:#0000CC;">(</span>stderr<span style="color:#0000CC;">,</span><span style="color:#FF00FF;">"signal failed\n"</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return <span style="color:#0000CC;">-</span>1<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br />
		</li>
		<li>
			<br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;printf<span style="color:#0000CC;">(</span><span style="color:#FF00FF;">"input a string:\n"</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span><span style="color:#0000CC;">(</span>fgets<span style="color:#0000CC;">(</span>input<span style="color:#0000CC;">,</span>sizeof<span style="color:#0000CC;">(</span>input<span style="color:#0000CC;">)</span><span style="color:#0000CC;">,</span>stdin<span style="color:#0000CC;">)</span><span style="color:#0000CC;">=</span><span style="color:#0000CC;">=</span> <span style="color:#0000FF;">NULL</span><span style="color:#0000CC;">)</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fprintf<span style="color:#0000CC;">(</span>stderr<span style="color:#0000CC;">,</span><span style="color:#FF00FF;">"fgets failed(%s)\n"</span><span style="color:#0000CC;">,</span>strerror<span style="color:#0000CC;">(</span>errno<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return <span style="color:#0000CC;">-</span>2<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">else</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">{</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf<span style="color:#0000CC;">(</span><span style="color:#FF00FF;">"you entered:%s"</span><span style="color:#0000CC;">,</span>input<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br />
		</li>
		<li>
			<br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;return 0<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			<br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<br />
		</li>
		<li>
			<span style="color:#0000CC;">}</span> 
		</li>
	</ol>
</div>
<span style="line-height:2;">&nbsp; &nbsp; 编译的时候，我没有定义SYSTEMV_SIGNAL_API,就是标准的glibc的signal函数，我用strace跟踪glibc的signal函数调用的系统调用是：&nbsp;</span><br />
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;">rt_sigaction<span style="color:#0000CC;">(</span>SIGINT<span style="color:#0000CC;">,</span> {0x8048736<span style="color:#0000CC;">,</span> <span style="color:#0000CC;">[</span><span style="color:#0000FF;">INT</span><span style="color:#0000CC;">]</span><span style="color:#0000CC;">,</span> SA_RESTART}<span style="color:#0000CC;">,</span> {SIG_DFL<span style="color:#0000CC;">,</span> <span style="color:#0000CC;">[</span><span style="color:#0000CC;">]</span><span style="color:#0000CC;">,</span> 0}<span style="color:#0000CC;">,</span> 8<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">=</span> 0</span> 
		</li>
	</ol>
</div>
<span style="line-height:2;">&nbsp; &nbsp; 测试结果如下：</span><br />
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;">manu@manu<span style="color:#0000CC;">-</span>hacks<span style="color:#0000CC;">:</span><span style="color:#0000CC;">~</span><span style="color:#0000CC;">/</span>code/c/self/signal$ gcc <span style="color:#0000CC;">-</span>o signal_glibc signal_fault_1<span style="color:#0000CC;">.</span>c <br />
</span> 
		</li>
		<li>
			manu@manu<span style="color:#0000CC;">-</span>hacks<span style="color:#0000CC;">:</span><span style="color:#0000CC;">~</span><span style="color:#0000CC;">/</span>code/c/self/signal$ <span style="color:#0000CC;">.</span><span style="color:#0000CC;">/</span>signal_glibc <br />
		</li>
		<li>
			input a string<span style="color:#0000CC;">:</span><br />
		</li>
		<li>
			input^COMG <span style="color:#0000CC;">,</span> I catch the signal SIGINT<br />
		</li>
		<li>
			^COK<span style="color:#0000CC;">,</span>finished process signal SIGINT<br />
		</li>
		<li>
			OMG <span style="color:#0000CC;">,</span> I catch the signal SIGINT<br />
		</li>
		<li>
			OK<span style="color:#0000CC;">,</span>finished process signal SIGINT<br />
		</li>
		<li>
			^COMG <span style="color:#0000CC;">,</span> I catch the signal SIGINT<br />
		</li>
		<li>
			OK<span style="color:#0000CC;">,</span>finished process signal SIGINT<br />
		</li>
		<li>
			^COMG <span style="color:#0000CC;">,</span> I catch the signal SIGINT<br />
		</li>
		<li>
			OK<span style="color:#0000CC;">,</span>finished process signal SIGINT<br />
		</li>
		<li>
			^Z<br />
		</li>
		<li>
			<span style="color:#0000CC;">[</span>1<span style="color:#0000CC;">]</span><span style="color:#0000CC;">+</span> Stopped <span style="color:#0000CC;">.</span><span style="color:#0000CC;">/</span>signal_glibc
		</li>
	</ol>
</div>
<span style="line-height:2;">&nbsp; &nbsp; 我们安装的信号处理函数并不是一次性的，原因就是glibc的signal函数调用的函数并非是signal系统调用，并没有SA_ONESHOT标志位。</span><br />
<span style="line-height:2;"> &nbsp; &nbsp; 我们如何体验下老古董的signal，glibc提供了一个sysv_signal接口，manual中这样描述：</span><br />
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;">&nbsp;&nbsp;&nbsp;However  sysv_signal<span style="color:#0000CC;">(</span><span style="color:#0000CC;">)</span> provides the System V unreliable signal semantics<span style="color:#0000CC;">,</span> that is<span style="color:#0000CC;">:</span> a<span style="color:#0000CC;">)</span> the disposition <span style="color:#FF0000;">of</span> the sig‐<br />
</span> 
		</li>
		<li>
			&nbsp; &nbsp;nal is reset to the default when the handler is invoked<span style="color:#0000CC;">;</span> b<span style="color:#0000CC;">)</span> delivery <span style="color:#FF0000;">of</span> further instances <span style="color:#FF0000;">of</span> the  signal  is <span style="color:#0000FF;">not</span><br />
		</li>
		<li>
			&nbsp; &nbsp;blocked <span style="color:#0000FF;">while</span> the signal handler is executing<span style="color:#0000CC;">;</span> <span style="color:#0000FF;">and</span> c<span style="color:#0000CC;">)</span> <span style="color:#0000FF;">if</span> the handler interrupts <span style="color:#0000CC;">(</span>certain<span style="color:#0000CC;">)</span> blocking system calls<span style="color:#0000CC;">,</span><br />
		</li>
		<li>
			&nbsp; &nbsp;then the system <span style="color:#0000FF;">call</span> is <span style="color:#0000FF;">not</span> automatically restarted<span style="color:#0000CC;">.</span> 
		</li>
	</ol>
</div>
<span style="line-height:2;">&nbsp; &nbsp; 对于我们的例子只需要：</span><br />
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;">gcc <span style="color:#0000CC;">-</span>DSYSTEMV_SIGNAL_API <span style="color:#0000CC;">-</span>o signal_sysv signal_fault_1<span style="color:#0000CC;">.</span>c</span> 
		</li>
	</ol>
</div>
<span style="line-height:2;">&nbsp; &nbsp; 我们看下：</span><br />
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;">manu@manu<span style="color:#0000CC;">-</span>hacks<span style="color:#0000CC;">:</span><span style="color:#0000CC;">~</span><span style="color:#0000CC;">/</span>code/c/self/signal$ <span style="color:#0000CC;">.</span><span style="color:#0000CC;">/</span>signal_sysv <br />
</span> 
		</li>
		<li>
			input a string<span style="color:#0000CC;">:</span><br />
		</li>
		<li>
			^COMG <span style="color:#0000CC;">,</span> I catch the signal SIGINT<br />
		</li>
		<li>
			^C<br />
		</li>
		<li>
			manu@manu<span style="color:#0000CC;">-</span>hacks<span style="color:#0000CC;">:</span><span style="color:#0000CC;">~</span><span style="color:#0000CC;">/</span>code/c/self/signal$ man sysv_signal
		</li>
	</ol>
</div>
<span style="line-height:2;">&nbsp; &nbsp; 第二个ctrl+C导致了进程的推出，原因是sysv_signal这种传统的signal的安装函数是一次性的。strace也证明了这一点：</span><br />
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;">rt_sigaction<span style="color:#0000CC;">(</span>SIGINT<span style="color:#0000CC;">,</span> {0x8048756<span style="color:#0000CC;">,</span> <span style="color:#0000CC;">[</span><span style="color:#0000CC;">]</span><span style="color:#0000CC;">,</span> SA_INTERRUPT<span style="color:#0000CC;">|</span>SA_NODEFER<span style="color:#0000CC;">|</span><span style="background-color:#FF9900;">SA_RESETHAND</span>}<span style="color:#0000CC;">,</span> {SIG_DFL<span style="color:#0000CC;">,</span> <span style="color:#0000CC;">[</span><span style="color:#0000CC;">]</span><span style="color:#0000CC;">,</span> 0}<span style="color:#0000CC;">,</span> 8<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">=</span> 0</span> 
		</li>
	</ol>
</div>
<span style="line-height:2;">&nbsp; &nbsp; 还记得么：</span><br />
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;">#define SA_ONESHOT <span style="background-color:#FF9900;">SA_RESETHAND</span></span> 
		</li>
	</ol>
</div>
<span style="line-height:2;">&nbsp; &nbsp; 我们发现sysv调用的不是signal系统调用，而是rt_sigaction系统调用。如果你非要品尝传统的signal系统调用，这也不难。</span><br />
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			gcc -DTRADITIONAL_SIGNAL_API &nbsp;-o signal_traditional signal_fault_1.c&nbsp;<br />
		</li>
	</ol>
</div>
<span style="line-height:2;">&nbsp; &nbsp; 我们发现第二个SIGINT信号的信号处理函数已经SIG_DFL,使进程退出了。</span><br />
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;">manu@manu<span style="color:#0000CC;">-</span>hacks<span style="color:#0000CC;">:</span><span style="color:#0000CC;">~</span><span style="color:#0000CC;">/</span>code/c/self/signal$ <span style="color:#0000CC;">.</span><span style="color:#0000CC;">/</span>signal_traditional <br />
</span> 
		</li>
		<li>
			input a string<span style="color:#0000CC;">:</span><br />
		</li>
		<li>
			^COMG <span style="color:#0000CC;">,</span> I catch the signal SIGINT<br />
		</li>
		<li>
			^C
		</li>
	</ol>
</div>
<span style="line-height:2;">&nbsp; &nbsp; 我们通过strace可以证明，的确调用了signal系统调用：&nbsp;</span><br />
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;">signal<span style="color:#0000CC;">(</span>SIGINT<span style="color:#0000CC;">,</span> 0x8048736<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">=</span> 0 <span style="color:#0000CC;">(</span>SIG_DFL<span style="color:#0000CC;">)</span></span><span style="line-height:2;font-size:14px;font-family:'sans serif', tahoma, verdana, helvetica;">&nbsp;</span> 
		</li>
	</ol>
</div>
<span style="line-height:2;">&nbsp;&nbsp;&nbsp;&nbsp;</span><strong style="line-height:2;">2早期的信号，没有屏蔽正在处理的信号。<br />
&nbsp; &nbsp; </strong><span style="line-height:2;">如何证明这一点呢？我上面的例子中故意在信号处理函数中做了很heavy很耗时的操作，从而容易造出处理信号A的时候，另一信号A又被deliver的场景。</span><br />
<span style="line-height:2;"> &nbsp; &nbsp; 因为do_heavy_work是个很耗费时间的操作，信号处理完成我们会在标准错误上输出处理完成的语句，这就表征了信号处理结束了没有。</span><br />
<span style="line-height:2;"> &nbsp; &nbsp; 我们看下传统signal的，收到一个SIGINT的信号的情况：</span><br />
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;">manu@manu<span style="color:#0000CC;">-</span>hacks<span style="color:#0000CC;">:</span><span style="color:#0000CC;">~</span><span style="color:#0000CC;">/</span>code/c/self/signal$ <span style="color:#0000CC;">.</span><span style="color:#0000CC;">/</span>signal_traditional <br />
</span> 
		</li>
		<li>
			input a string<span style="color:#0000CC;">:</span><br />
		</li>
		<li>
			^C<span style="background-color:#FF9900;">OMG </span><span style="color:#0000CC;background-color:#FF9900;">,</span><span style="background-color:#FF9900;"> I catch the signal SIGINT</span><br />
		</li>
		<li>
			<span style="background-color:#FF9900;">OK</span><span style="color:#0000CC;background-color:#FF9900;">,</span><span style="background-color:#FF9900;">finished process signal SIGINT</span><br />
		</li>
		<li>
			fgets failed<span style="color:#0000CC;">(</span>Interrupted system <span style="color:#0000FF;">call</span><span style="color:#0000CC;">)</span><br />
		</li>
		<li>
			manu@manu<span style="color:#0000CC;">-</span>hacks<span style="color:#0000CC;">:</span><span style="color:#0000CC;">~</span><span style="color:#0000CC;">/</span>code/c/self/signal$
		</li>
	</ol>
</div>
<span style="line-height:2;">&nbsp; &nbsp; 如果我在进程处理信号处理函数的时候，再次发送一个SIGINT，这个SIGINT也可能被内核deliver。那么信号处理函数就被中断掉，</span><br />
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;">manu@manu<span style="color:#0000CC;">-</span>hacks<span style="color:#0000CC;">:</span><span style="color:#0000CC;">~</span><span style="color:#0000CC;">/</span>code/c/self/signal$ <span style="color:#0000CC;">.</span><span style="color:#0000CC;">/</span>signal_traditional <br />
</span> 
		</li>
		<li>
			input a string<span style="color:#0000CC;">:</span><br />
		</li>
		<li>
			^COMG <span style="color:#0000CC;">,</span> <span style="background-color:#FF9900;">I catch the signal SIGINT</span><br />
		</li>
		<li>
			^C<br />
		</li>
		<li>
			manu@manu<span style="color:#0000CC;">-</span>hacks<span style="color:#0000CC;">:</span><span style="color:#0000CC;">~</span><span style="color:#0000CC;">/</span>code/c/self/signal$
		</li>
	</ol>
</div>
<span style="line-height:2;">&nbsp; &nbsp; 我们看到我们收到了I catch the signal SIGINT的打印，但是，并没有收到OK,I finished process signal SIGINT，这表明传统的signal并没有屏蔽正在处理的信号。</span><br />
<span style="line-height:2;"> &nbsp; &nbsp; 那么我们现在的glibc的signal函数如何？</span><br />
<span style="line-height:2;"> &nbsp; &nbsp; strace又来帮忙了?</span><br />
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;">rt_sigaction<span style="color:#0000CC;">(</span>SIGINT<span style="color:#0000CC;">,</span> <span style="background-color:#FF9900;">{0x8048736</span><span style="color:#0000CC;background-color:#FF9900;">,</span> <span style="color:#0000CC;background-color:#FF9900;">[</span><span style="color:#0000FF;background-color:#FF9900;">INT</span><span style="color:#0000CC;background-color:#FF9900;">]</span><span style="color:#0000CC;background-color:#FF9900;">,</span><span style="background-color:#FF9900;"> SA_RESTART}</span><span style="color:#0000CC;">,</span> {SIG_DFL<span style="color:#0000CC;">,</span> <span style="color:#0000CC;">[</span><span style="color:#0000CC;">]</span><span style="color:#0000CC;">,</span> 0}<span style="color:#0000CC;">,</span> 8<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">=</span> 0</span> 
		</li>
	</ol>
</div>
<span style="line-height:2;">&nbsp; &nbsp; glibc的signal函数，调用的是rt_sigaction 系统调用：</span><br />
<span style="line-height:2;"> &nbsp;&nbsp;&nbsp;&nbsp;</span><br />
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;">SYSCALL_DEFINE4<span style="color:#0000CC;">(</span>rt_sigaction<span style="color:#0000CC;">,</span> <span style="color:#0000FF;">int</span><span style="color:#0000CC;">,</span> sig<span style="color:#0000CC;">,</span><br />
</span> 
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const <span style="color:#0000FF;">struct</span> sigaction __user <span style="color:#0000CC;">*</span><span style="color:#0000CC;">,</span> act<span style="color:#0000CC;">,</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">struct</span> sigaction __user <span style="color:#0000CC;">*</span><span style="color:#0000CC;">,</span> oact<span style="color:#0000CC;">,</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size_t<span style="color:#0000CC;">,</span> sigsetsize<span style="color:#0000CC;">)</span><br />
		</li>
		<li>
			<br />
		</li>
		<li>
			<span style="color:#0000FF;">struct</span> sigaction {<br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">union</span> {<br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;  __sighandler_t _sa_handler<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;  void <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>_sa_sigaction<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span><span style="color:#0000FF;">int</span><span style="color:#0000CC;">,</span> <span style="color:#0000FF;">struct</span> siginfo <span style="color:#0000CC;">*</span><span style="color:#0000CC;">,</span> void <span style="color:#0000CC;">*</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;} _u<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;sigset_t sa_mask<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;unsigned long sa_flags<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;void <span style="color:#0000CC;">(</span><span style="color:#0000CC;">*</span>sa_restorer<span style="color:#0000CC;">)</span><span style="color:#0000CC;">(</span>void<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			}
		</li>
	</ol>
</div>
<span style="line-height:2;">&nbsp; &nbsp; 我们把strace中的信息，和sigaction数据对比，发现，[INT],就是传说中的sa_mask,当处理SIGINT的时候，看起来是在处理SIGINT信号处理函数的时候，SIGINT会被被屏蔽，防止重入。实际如何呢？&nbsp;</span><br />
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;">manu@manu<span style="color:#0000CC;">-</span>hacks<span style="color:#0000CC;">:</span><span style="color:#0000CC;">~</span><span style="color:#0000CC;">/</span>code/c/self/signal$ <span style="color:#0000CC;">.</span><span style="color:#0000CC;">/</span>signal_glibc <br />
</span> 
		</li>
		<li>
			input a string<span style="color:#0000CC;">:</span><br />
		</li>
		<li>
			^COMG <span style="color:#0000CC;">,</span> I catch the signal SIGINT<br />
		</li>
		<li>
			^C^C^C^COK<span style="color:#0000CC;">,</span>finished process signal SIGINT<br />
		</li>
		<li>
			OMG <span style="color:#0000CC;">,</span> I catch the signal SIGINT<br />
		</li>
		<li>
			^C^COK<span style="color:#0000CC;">,</span>finished process signal SIGINT<br />
		</li>
		<li>
			OMG <span style="color:#0000CC;">,</span> I catch the signal SIGINT<br />
		</li>
		<li>
			OK<span style="color:#0000CC;">,</span>finished process signal SIGINT<br />
		</li>
		<li>
			^COMG <span style="color:#0000CC;">,</span> I catch the signal SIGINT<br />
		</li>
		<li>
			OK<span style="color:#0000CC;">,</span>finished process signal SIGINT<br />
		</li>
		<li>
			^COMG <span style="color:#0000CC;">,</span> I catch the signal SIGINT<br />
		</li>
		<li>
			^Z<br />
		</li>
		<li>
			<span style="color:#0000CC;">[</span>2<span style="color:#0000CC;">]</span><span style="color:#0000CC;">+</span> Stopped <span style="color:#0000CC;">.</span><span style="color:#0000CC;">/</span>signal_glibc
		</li>
	</ol>
</div>
<span style="line-height:2;">&nbsp; &nbsp; 从未出现OMG，I catch the SIGINT连续出现。这是偶然还是必然呢？答案是必然，内核是如何做到的呢？</span><br />
<span style="line-height:2;">&nbsp; &nbsp; 在上图的handle_signal函数的末尾，调用了signal_delivered函数：&nbsp;</span><br />
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;"><span style="color:#0000CC;">/</span><span style="color:#0000CC;">*</span><span style="color:#0000CC;">*</span><br />
</span> 
		</li>
		<li>
			&nbsp;<span style="color:#0000CC;">*</span> signal_delivered <span style="color:#0000CC;">-</span> <br />
		</li>
		<li>
			&nbsp;<span style="color:#0000CC;">*</span> @sig<span style="color:#0000CC;">:</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;number of signal being delivered<br />
		</li>
		<li>
			&nbsp;<span style="color:#0000CC;">*</span> @info<span style="color:#0000CC;">:</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;siginfo_t of signal being delivered<br />
		</li>
		<li>
			&nbsp;<span style="color:#0000CC;">*</span> @ka<span style="color:#0000CC;">:</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sigaction setting that chose the handler<br />
		</li>
		<li>
			&nbsp;<span style="color:#0000CC;">*</span> @regs<span style="color:#0000CC;">:</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user register state<br />
		</li>
		<li>
			&nbsp;<span style="color:#0000CC;">*</span> @stepping<span style="color:#0000CC;">:</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nonzero <span style="color:#0000FF;">if</span> debugger single<span style="color:#0000CC;">-</span><span style="color:#0000FF;">step</span> <span style="color:#0000FF;">or</span> block<span style="color:#0000CC;">-</span><span style="color:#0000FF;">step</span> <span style="color:#0000FF;">in</span> use<br />
		</li>
		<li>
			&nbsp;<span style="color:#0000CC;">*</span><br />
		</li>
		<li>
			&nbsp;<span style="color:#0000CC;">*</span> This <span style="color:#0000FF;">function</span> should be called when a signal has succesfully been<br />
		</li>
		<li>
			&nbsp;<span style="color:#0000CC;">*</span> delivered<span style="color:#0000CC;">.</span> It updates the blocked signals accordingly <span style="color:#0000CC;">(</span><span style="color:#0000CC;">@</span>ka<span style="color:#0000CC;">-</span><span style="color:#0000CC;">></span>sa<span style="color:#0000CC;">.</span>sa_mask<br />
		</li>
		<li>
			&nbsp;<span style="color:#0000CC;">*</span> <span style="color:#0000FF;">is</span> always blocked<span style="color:#0000CC;">,</span> <span style="color:#0000FF;">and</span> the signal itself <span style="color:#0000FF;">is</span> blocked unless <span style="color:#0000CC;">%</span>SA_NODEFER<br />
		</li>
		<li>
			&nbsp;<span style="color:#0000CC;">*</span> <span style="color:#0000FF;">is</span> <span style="color:#0000FF;">set</span> <span style="color:#0000FF;">in</span> @ka<span style="color:#0000CC;">-</span><span style="color:#0000CC;">></span>sa<span style="color:#0000CC;">.</span>sa_flags<span style="color:#0000CC;">.</span> Tracing <span style="color:#0000FF;">is</span> notified<span style="color:#0000CC;">.</span><br />
		</li>
		<li>
			&nbsp;<span style="color:#0000CC;">*</span><span style="color:#0000CC;">/</span><br />
		</li>
		<li>
			void signal_delivered<span style="color:#0000CC;">(</span><span style="color:#FF0000;">int</span> sig<span style="color:#0000CC;">,</span> siginfo_t <span style="color:#0000CC;">*</span>info<span style="color:#0000CC;">,</span> struct k_sigaction <span style="color:#0000CC;">*</span>ka<span style="color:#0000CC;">,</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct pt_regs <span style="color:#0000CC;">*</span>regs<span style="color:#0000CC;">,</span> <span style="color:#FF0000;">int</span> stepping<span style="color:#0000CC;">)</span><br />
		</li>
		<li>
			<span style="color:#0000CC;">{</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;sigset_t blocked<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			<br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">/</span><span style="color:#0000CC;">*</span> A signal was successfully delivered<span style="color:#0000CC;">,</span> <span style="color:#0000FF;">and</span> the<br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;   saved sigmask was stored <span style="color:#0000FF;">on</span> the signal frame<span style="color:#0000CC;">,</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:#0000FF;">and</span> will be restored by sigreturn<span style="color:#0000CC;">.</span> So we can<br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;   simply clear the restore sigmask flag<span style="color:#0000CC;">.</span> <span style="color:#0000CC;">*</span><span style="color:#0000CC;">/</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;clear_restore_sigmask<span style="color:#0000CC;">(</span><span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			<br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;sigorsets<span style="color:#0000CC;">(</span><span style="color:#0000CC;">&</span>blocked<span style="color:#0000CC;">,</span> <span style="color:#0000CC;">&</span>current<span style="color:#0000CC;">-</span><span style="color:#0000CC;">></span>blocked<span style="color:#0000CC;">,</span> <span style="color:#0000CC;">&</span>ka<span style="color:#0000CC;">-</span><span style="color:#0000CC;">></span>sa<span style="color:#0000CC;">.</span>sa_mask<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;background-color:#FF9900;">if</span> <span style="color:#0000CC;background-color:#FF9900;">(</span><span style="color:#0000CC;background-color:#FF9900;">!</span><span style="color:#0000CC;background-color:#FF9900;">(</span><span style="background-color:#FF9900;">ka</span><span style="color:#0000CC;background-color:#FF9900;">-</span><span style="color:#0000CC;background-color:#FF9900;">></span><span style="background-color:#FF9900;">sa</span><span style="color:#0000CC;background-color:#FF9900;">.</span><span style="background-color:#FF9900;">sa_flags </span><span style="color:#0000CC;background-color:#FF9900;">&</span><span style="background-color:#FF9900;"> SA_NODEFER</span><span style="color:#0000CC;background-color:#FF9900;">)</span><span style="color:#0000CC;background-color:#FF9900;">)</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background-color:#FF9900;">sigaddset</span><span style="color:#0000CC;background-color:#FF9900;">(</span><span style="color:#0000CC;background-color:#FF9900;">&</span><span style="background-color:#FF9900;">blocked</span><span style="color:#0000CC;background-color:#FF9900;">,</span><span style="background-color:#FF9900;"> sig</span><span style="color:#0000CC;background-color:#FF9900;">)</span><span style="color:#0000CC;background-color:#FF9900;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;set_current_blocked<span style="color:#0000CC;">(</span><span style="color:#0000CC;">&</span>blocked<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;tracehook_signal_handler<span style="color:#0000CC;">(</span>sig<span style="color:#0000CC;">,</span> info<span style="color:#0000CC;">,</span> ka<span style="color:#0000CC;">,</span> regs<span style="color:#0000CC;">,</span> stepping<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			<span style="color:#0000CC;">}</span> 
		</li>
	</ol>
</div>
<span style="line-height:2;">&nbsp; &nbsp; 这个函数很有意思，只要用户没有指定SA_NODEFER标志位，当前处理的信号总是加入到屏蔽信号之中。深入理解Linux内核在也提到了这一点。经典教材是这么说的：</span><br />
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;"><em>当进程执行一个信号处理程序的函数时，通常屏蔽相应的信号，即自动阻塞这个信号，直到处理程序结束。因此，所处理的信号的另一次出现，并不能中断信号处理程序，所以信号处理函数不必是可以重入的。</em></span> 
		</li>
	</ol>
</div>
<span style="line-height:2;">&nbsp; &nbsp; 这个结论很震惊吧。是的你用glibc的signal函数，不必担心信号处理函数的嵌套问题。至于重入问题我们后文讨论。</span><br />
<span style="line-height:2;">&nbsp; &nbsp; 那么传统的signal系统调用和sysv_signal又如何？为何他们存在信号的可重入问题？&nbsp; &nbsp;</span><br />
<div id="codeText" class="codeText">
	<ol style="line-height:2;margin:0px 1px 0px 0px;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;">SYSCALL_DEFINE2<span style="color:#0000CC;">(</span>signal<span style="color:#0000CC;">,</span> <span style="color:#0000FF;">int</span><span style="color:#0000CC;">,</span> sig<span style="color:#0000CC;">,</span> __sighandler_t<span style="color:#0000CC;">,</span> handler<span style="color:#0000CC;">)</span><br />
</span> 
		</li>
		<li>
			{<br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">struct</span> k_sigaction new_sa<span style="color:#0000CC;">,</span> old_sa<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">int</span> <span style="color:#0000FF;">ret</span><span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			<br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;new_sa<span style="color:#0000CC;">.</span>sa<span style="color:#0000CC;">.</span>sa_handler <span style="color:#0000CC;">=</span> handler<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;new_sa<span style="color:#0000CC;">.</span>sa<span style="color:#0000CC;">.</span>sa_flags <span style="color:#0000CC;">=</span> SA_ONESHOT <span style="color:#0000CC;">|</span> <span style="background-color:#FF9900;">SA_NOMASK</span><span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;sigemptyset<span style="color:#0000CC;">(</span><span style="color:#0000CC;">&</span>new_sa<span style="color:#0000CC;">.</span>sa<span style="color:#0000CC;">.</span>sa_mask<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			<br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">ret</span> <span style="color:#0000CC;">=</span> do_sigaction<span style="color:#0000CC;">(</span>sig<span style="color:#0000CC;">,</span> &new_sa<span style="color:#0000CC;">,</span> &old_sa<span style="color:#0000CC;">)</span><span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			<br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;return <span style="color:#0000FF;">ret</span> <span style="color:#0000CC;">?</span> <span style="color:#0000FF;">ret</span> <span style="color:#0000CC;">:</span> <span style="color:#0000CC;">(</span>unsigned long<span style="color:#0000CC;">)</span>old_sa<span style="color:#0000CC;">.</span>sa<span style="color:#0000CC;">.</span>sa_handler<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			}
		</li>
	</ol>
	<div>
		<span style="color:#5c5c5c;"><span style="line-height:12px;"><br />
#define <span style="background-color:#FF9900;">SA_NOMASK</span> <span style="background-color:#FF9900;">SA_NODEFER</span><br />
<br />
</span></span> 
	</div>
</div>
&nbsp; &nbsp; 至于sysv_signal<br />
<div id="codeText" class="codeText">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;">rt_sigaction<span style="color:#0000CC;">(</span>SIGINT<span style="color:#0000CC;">,</span> {0x8048756<span style="color:#0000CC;">,</span> <span style="color:#0000CC;">[</span><span style="color:#0000CC;">]</span><span style="color:#0000CC;">,</span> SA_INTERRUPT<span style="color:#0000CC;">|</span><span style="background-color:#FF9900;">SA_NODEFER</span><span style="color:#0000CC;">|</span>SA_RESETHAND}<span style="color:#0000CC;">,</span> {SIG_DFL<span style="color:#0000CC;">,</span> <span style="color:#0000CC;">[</span><span style="color:#0000CC;">]</span><span style="color:#0000CC;">,</span> 0}<span style="color:#0000CC;">,</span> 8<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">=</span> 0</span> 
		</li>
	</ol>
</div>
&nbsp; &nbsp; 不多说了，不作死就不会死，signal系统调用和sysv_signal都作死：sa_mask是空，更要命的是都有<span style="font-family:Consolas, monospace;letter-spacing:0.10000000149011612px;line-height:12px;white-space:normal;background-color:#FF9900;">SA_NODEFER</span></span><span style="font-size:14px;"> 。自作孽，不可活。之所以如此自作孽，就是为了向下兼容，向传统的signal致敬。<br />
&nbsp;&nbsp;&nbsp;&nbsp;<br />
&nbsp;<strong> &nbsp; 3 早期的signal，会中断系统调用。&nbsp;&nbsp;</strong><br />
&nbsp;&nbsp;&nbsp;&nbsp;何意？<strong>&nbsp;&nbsp;</strong><br />
&nbsp;&nbsp;&nbsp;&nbsp;某些系统调用可能会被信号中断，此时系统调用返回错误EINTR，表示被信号中断了。非常多的系统调用都会被中断，我前面有篇博文<a href="http://blog.chinaunix.net/uid-24774106-id-3065234.html" target="_blank">重启系统调用探究</a>，就详细介绍了系统被信号中断的问题，传统的signal会出现这个问题。那么glibc的signal函数有没有这个问题？答案是没有这个问题，glibc的signal函数很不错。<br />
<div id="codeText" class="codeText">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;">rt_sigaction<span style="color:#0000CC;">(</span>SIGINT<span style="color:#0000CC;">,</span> {0x8048736<span style="color:#0000CC;">,</span> <span style="color:#0000CC;">[</span><span style="color:#0000FF;">INT</span><span style="color:#0000CC;">]</span><span style="color:#0000CC;">,</span> <span style="background-color:#FF9900;">SA_RESTART</span>}<span style="color:#0000CC;">,</span> {SIG_DFL<span style="color:#0000CC;">,</span> <span style="color:#0000CC;">[</span><span style="color:#0000CC;">]</span><span style="color:#0000CC;">,</span> 0}<span style="color:#0000CC;">,</span> 8<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">=</span> 0</span> 
		</li>
	</ol>
</div>
&nbsp; &nbsp; signal系统调用和sysv_signal都有这个弊端：请看：&nbsp;<br />
<div id="codeText" class="codeText">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;">manu@manu<span style="color:#0000CC;">-</span>hacks<span style="color:#0000CC;">:</span><span style="color:#0000CC;">~</span><span style="color:#0000CC;">/</span>code/c/self/signal$ <span style="color:#0000CC;">.</span><span style="color:#0000CC;">/</span>signal_traditional <br />
</span> 
		</li>
		<li>
			input a string<span style="color:#0000CC;">:</span><br />
		</li>
		<li>
			^COMG <span style="color:#0000CC;">,</span> I catch the signal SIGINT<br />
		</li>
		<li>
			OK<span style="color:#0000CC;">,</span>finished process signal SIGINT<br />
		</li>
		<li>
			<span style="background-color:#FF9900;">fgets failed</span><span style="color:#0000CC;background-color:#FF9900;">(</span><span style="background-color:#FF9900;">Interrupted system </span><span style="color:#0000FF;background-color:#FF9900;">call</span><span style="color:#0000CC;background-color:#FF9900;">)</span><br />
		</li>
		<li>
			manu@manu<span style="color:#0000CC;">-</span>hacks<span style="color:#0000CC;">:</span><span style="color:#0000CC;">~</span><span style="color:#0000CC;">/</span>code/c/self/signal$ <span style="color:#0000CC;">.</span><span style="color:#0000CC;">/</span>signal_sysv <br />
		</li>
		<li>
			input a string<span style="color:#0000CC;">:</span><br />
		</li>
		<li>
			^COMG <span style="color:#0000CC;">,</span> I catch the signal SIGINT<br />
		</li>
		<li>
			OK<span style="color:#0000CC;">,</span>finished process signal SIGINT<br />
		</li>
		<li>
			<span style="background-color:#FF9900;">fgets failed</span><span style="color:#0000CC;background-color:#FF9900;">(</span><span style="background-color:#FF9900;">Interrupted system </span><span style="color:#0000FF;background-color:#FF9900;">call</span><span style="color:#0000CC;background-color:#FF9900;">)</span><br />
		</li>
		<li>
			manu@manu<span style="color:#0000CC;">-</span>hacks<span style="color:#0000CC;">:</span><span style="color:#0000CC;">~</span><span style="color:#0000CC;">/</span>code/c/self/signal$
		</li>
	</ol>
</div>
&nbsp; &nbsp; 原因就是没有SA_RESTART标志位。内核代码如何体现：<br />
<div id="codeText" class="codeText">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;">static void<br />
</span> 
		</li>
		<li>
			handle_signal<span style="color:#0000CC;">(</span>unsigned long sig<span style="color:#0000CC;">,</span> siginfo_t <span style="color:#0000CC;">*</span>info<span style="color:#0000CC;">,</span> struct k_sigaction <span style="color:#0000CC;">*</span>ka<span style="color:#0000CC;">,</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;struct pt_regs <span style="color:#0000CC;">*</span>regs<span style="color:#0000CC;">)</span><br />
		</li>
		<li>
			<span style="color:#0000CC;">{</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">/</span><span style="color:#0000CC;">*</span> Are we from a system <span style="color:#0000FF;">call</span><span style="color:#0000CC;">?</span> <span style="color:#0000CC;">*</span><span style="color:#0000CC;">/</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">if</span> <span style="color:#0000CC;">(</span>syscall_get_nr<span style="color:#0000CC;">(</span>current<span style="color:#0000CC;">,</span> regs<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">></span><span style="color:#0000CC;">=</span> 0<span style="color:#0000CC;">)</span> <span style="color:#0000CC;">{</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">/</span><span style="color:#0000CC;">*</span> <span style="color:#0000FF;">If</span> so<span style="color:#0000CC;">,</span> check system <span style="color:#0000FF;">call</span> restarting<span style="color:#0000CC;">.</span><span style="color:#0000CC;">.</span> <span style="color:#0000CC;">*</span><span style="color:#0000CC;">/</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;switch <span style="color:#0000CC;">(</span>syscall_get_error<span style="color:#0000CC;">(</span>current<span style="color:#0000CC;">,</span> regs<span style="color:#0000CC;">)</span><span style="color:#0000CC;">)</span> <span style="color:#0000CC;">{</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">case</span> <span style="color:#0000CC;">-</span>ERESTART_RESTARTBLOCK<span style="color:#0000CC;">:</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">case</span> <span style="color:#0000CC;">-</span>ERESTARTNOHAND<span style="color:#0000CC;">:</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;regs<span style="color:#0000CC;">-</span><span style="color:#0000CC;">></span>ax <span style="color:#0000CC;">=</span> <span style="color:#0000CC;">-</span>EINTR<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			<br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">case</span> <span style="color:#0000CC;">-</span>ERESTARTSYS<span style="color:#0000CC;">:</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;background-color:#FF9900;">if</span> <span style="color:#0000CC;background-color:#FF9900;">(</span><span style="color:#0000CC;background-color:#FF9900;">!</span><span style="color:#0000CC;background-color:#FF9900;">(</span><span style="background-color:#FF9900;">ka</span><span style="color:#0000CC;background-color:#FF9900;">-</span><span style="color:#0000CC;background-color:#FF9900;">></span><span style="background-color:#FF9900;">sa</span><span style="color:#0000CC;background-color:#FF9900;">.</span><span style="background-color:#FF9900;">sa_flags </span><span style="color:#0000CC;background-color:#FF9900;">&</span><span style="background-color:#FF9900;"> SA_RESTART</span><span style="color:#0000CC;background-color:#FF9900;">)</span><span style="color:#0000CC;background-color:#FF9900;">)</span> <span style="color:#0000CC;">{</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="background-color:#FF9900;">regs</span><span style="color:#0000CC;background-color:#FF9900;">-</span><span style="color:#0000CC;background-color:#FF9900;">></span><span style="background-color:#FF9900;">ax </span><span style="color:#0000CC;background-color:#FF9900;">=</span> <span style="color:#0000CC;background-color:#FF9900;">-</span><span style="background-color:#FF9900;">EINTR</span><span style="color:#0000CC;background-color:#FF9900;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">/</span><span style="color:#0000CC;">*</span> fallthrough <span style="color:#0000CC;">*</span><span style="color:#0000CC;">/</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000FF;">case</span> <span style="color:#0000CC;">-</span>ERESTARTNOINTR<span style="color:#0000CC;">:</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;regs<span style="color:#0000CC;">-</span><span style="color:#0000CC;">></span>ax <span style="color:#0000CC;">=</span> regs<span style="color:#0000CC;">-</span><span style="color:#0000CC;">></span>orig_ax<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;regs<span style="color:#0000CC;">-</span><span style="color:#0000CC;">></span>ip <span style="color:#0000CC;">-</span><span style="color:#0000CC;">=</span> 2<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break<span style="color:#0000CC;">;</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span><br />
		</li>
		<li>
			&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:#0000CC;">}</span> 
		</li>
		<li>
			<span style="color:#0000CC;">&nbsp; &nbsp; 。。。</span> 
		</li>
		<li>
			<span style="color:#0000cc;">}</span> 
		</li>
	</ol>
</div>
&nbsp; &nbsp; 很多文章都都将signal函数描述的多么不堪，其实glibc的signal函数非常靠谱，传统的signal的几个弊端都不存在，在日常的工作中，signal完全可以满足需要。<br />
但是存在一个问题，就会可移植性。由于不同的平台可能不同。单就linux平台而言，glibc的signal函数还不错。<br />
&nbsp; &nbsp; 那么signal还有什么问题呢？为啥有引入了实时信号？那是下一篇内容。<br />
<br />
参考文献<br />
1 深入理解linunx内核<br />
2&nbsp;</span><span style="font-size:14px;line-height:1.5;">&nbsp;linux内核源代码情景分析<br />
3 signal ppt&nbsp;</span><span style="font-size:14px;">&nbsp;蘇維農<br />
4 linux系统编程
<div id="codeText" class="codeText">
	<ol style="line-height:2;margin:0px 1px 0px 0px;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000FF;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000FF;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
	</ol>
</div>
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
	</ol>
</div>
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000FF;"></span> 
		</li>
	</ol>
</div>
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
	</ol>
</div>
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
	</ol>
</div>
<span style="line-height:2;"></span> 
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span></span> 
		</li>
		<li>
			<span></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
	</ol>
</div>
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
	</ol>
</div>
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#0000FF;"></span> 
		</li>
		<li>
			<span style="color:#0000FF;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000FF;"></span> 
		</li>
		<li>
			<span style="color:#0000FF;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
	</ol>
</div>
<span style="line-height:2;"></span> 
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
	</ol>
</div>
<div id="codeText" class="codeText" style="line-height:2;">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000FF;"></span> 
		</li>
		<li>
			<span style="color:#0000FF;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000FF;"></span> 
		</li>
		<li>
			<span></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
	</ol>
</div>
<div id="codeText" class="codeText">
	<ol style="line-height:2;margin:0px 1px 0px 0px;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#0000FF;"></span> 
		</li>
		<li>
			<span style="color:#0000FF;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000CC;"></span> 
		</li>
		<li>
			<span style="color:#0000FF;"></span> 
		</li>
		<li>
			<span style="color:#0000FF;"></span> 
		</li>
	</ol>
</div>
<div id="codeText" class="codeText">
	<ol style="margin:0 1px 0 0;padding:5px 0pt;" start="1" class="dp-css none_number">
		<li>
			<span style="color:#000000;"><span style="color:#0000CC;"></span><span style="color:#0000CC;"></span><span style="color:#0000CC;"></span><span style="color:#0000CC;"></span><span style="color:#0000CC;"></span><span style="color:#0000CC;"></span><span style="color:#0000CC;"></span><span></span><span style="color:#0000CC;"></span><span style="color:#0000CC;"></span><span style="color:#0000CC;"></span><span style="color:#0000CC;"></span><span style="color:#0000CC;"></span><span style="color:#0000CC;"></span><span style="color:#0000CC;"></span><span style="color:#0000CC;"></span><span style="color:#0000CC;"></span></span> 
		</li>
	</ol>
</div>
</span>                                   </div>
            <!-- <div class="Blog_con3_1">管理员在2009年8月13日编辑了该文章文章。</div> -->
            <div class="Blog_con2_1 Blog_con3_2">
              <div>
			  <!--<img src="/image/default/tu_8.png">-->
			  <!-- JiaThis Button BEGIN -->
				<div class="bdsharebuttonbox"><A class=bds_more href="#" data-cmd="more"></A><A class=bds_qzone title=分享到QQ空间 href="#" data-cmd="qzone"></A><A class=bds_tsina title=分享到新浪微博 href="#" data-cmd="tsina"></A><A class=bds_tqq title=分享到腾讯微博 href="#" data-cmd="tqq"></A><A class=bds_renren title=分享到人人网 href="#" data-cmd="renren"></A><A class=bds_weixin title=分享到微信 href="#" data-cmd="weixin"></A></div>
<script>window._bd_share_config={"common":{"bdSnsKey":{},"bdText":"","bdMini":"2","bdMiniList":false,"bdPic":"","bdStyle":"0","bdSize":"16"},"share":{}};with(document)0[(getElementsByTagName('head')[0]||body).appendChild(createElement('script')).src='http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion='+~(-new Date()/36e5)];</script>
				<!-- JiaThis Button END -->
			  </div>
              阅读(28916) | 评论(7) | 转发(24) |
			                <div class="HT_line3"></div>
            </div>
            <div class="Blog_con3_3">
              <div><span id='digg_num'>1</span><a href="javascript:void(0)" id='digg' bid='4061386' url='/blog/digg.html' ></a></div>
              <p>上一篇：<a href="/uid-24774106-id-4041793.html">udev 初探</a></p>
              <p>下一篇：<a href="/uid-24774106-id-4064447.html">Linux signal 那些事儿（2）</a></p>
            </div>
          </div>
          <div class="Blog_con3_4">
            <div class="Blog_tit2 Blog_tit6">相关热门文章</div>
			            <ul class="Blog_ul7">
						  <li><span class="Blog_span7"></span><a href="/uid-10900999-id-2920737.html" title='linux 常见服务端口' target='blank' >linux 常见服务端口</a></li>
						  <li><span class="Blog_span7"></span><a href="/uid-20457694-id-1944680.html" title='xmanager 2.0 for linux配置' target='blank' >xmanager 2.0 for linux配置</a></li>
						  <li><span class="Blog_span7"></span><a href="/uid-21025382-id-168762.html" title='【ROOTFS搭建】busybox的httpd使用CGI脚本(BusyBox httpd CGI scripts)' target='blank' >【ROOTFS搭建】busybox的httpd...</a></li>
						  <li><span class="Blog_span7"></span><a href="/uid-26824563-id-4591418.html" title='openwrt中luci学习笔记' target='blank' >openwrt中luci学习笔记</a></li>
						  <li><span class="Blog_span7"></span><a href="/uid-20378509-id-1956694.html" title='什么是shell' target='blank' >什么是shell</a></li>
			            </ul>
            <ul class="Blog_ul7">
						  <li><span class="Blog_span6"></span><a href="http://ask.chinaunix.net/question/785970" title='linux dhcp  peizhi roc' target='blank'  >linux dhcp  peizhi roc</a></li>
						  <li><span class="Blog_span6"></span><a href="http://ask.chinaunix.net/question/785964" title='关于Unix文件的软链接' target='blank'  >关于Unix文件的软链接</a></li>
						  <li><span class="Blog_span6"></span><a href="http://ask.chinaunix.net/question/785935" title='求教这个命令什么意思，我是新手，刚刚学习solaris' target='blank'  >求教这个命令什么意思，我是新...</a></li>
						  <li><span class="Blog_span6"></span><a href="http://ask.chinaunix.net/question/785919" title='sed -e &quot;/grep/d&quot; 是什么意思？谢谢' target='blank'  >sed -e &quot;/grep/d&quot; 是什么意思...</a></li>
						  <li><span class="Blog_span6"></span><a href="http://ask.chinaunix.net/question/785702" title='谁能够帮我解决LINUX  2.6  10版本驱动' target='blank'  >谁能够帮我解决LINUX  2.6  10...</a></li>
			            </ul>
            <div class="clear"></div>
          </div>
		  <!--
          <div class="Blog_con3_4 Blog_con3_5">
            <div class="Blog_tit2 Blog_tit7">热门推荐</div>
            <ul>
			              <li><a href="" title="" target='blank' ></a></li>
			            </ul>
          </div>
		  -->
        </div>
      </div>
      <div class="Blog_right1_7" id='replyList'>
		<div class="Blog_tit3">给主人留下些什么吧！~~</div>
														<!--不包含引用-->
					<div class="Blog_right1_8">
					  <div class="Blog_right_img1"><a href='/uid/30153338.html' ><img src="http://passport.ixpub.net/data/avatar/030/15/33/38_avatar_small.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'" /></a></div>
					  <div class="Blog_right_font1">
                                              						<p class="Blog_p5"><span><a href='/uid/30153338.html' ><span>fanqiepangpang</span></a></span>2015-03-09 14:53:36</p>
                                              						<p class="Blog_p6">看样子是，那个process只要做syscall都会去处理挂起的signal，所以，如果那个process永远处于D&nbsp;state或者block在spin&nbsp;lock里面，应该就永远处理不了挂起的signal<br />&nbsp;31&nbsp;ret_fast_syscall:<br />&nbsp;32&nbsp;&nbsp;UNWIND(.fnstart&nbsp;&nbsp;&nbsp;&nbsp;)<br />&nbsp;33&nbsp;&nbsp;UNWIND(.cantunwind&nbsp;)<br />&nbsp;34&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;disable_irq&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@&nbsp;disable&nbsp;interrupts<br />&nbsp;35&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ldr&nbsp;r1,&nbsp;[tsk,&nbsp;#TI_FLAGS]<br />&nbsp;36&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tst&nbsp;r1,&nbsp;#_TIF_WORK_MASK<br />&nbsp</p>                                     
						<div class="div1"><a href="javascript:void(0);" class="Blog_a10"  toid='30153338' bid='4061386' cid='621051' tname='fanqiepangpang'>回复</a> | <a href="javascript:;" onclick="linkto();showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');" class='box_report'>举报</a></div>
						<!-- 评论占位框-->
						<div class='z_move_comment' style='display:none'>
						</div>
					  </div>
					  <div class="Blog_line1"></div>
					</div>
																<!--不包含引用-->
					<div class="Blog_right1_8">
					  <div class="Blog_right_img1"><a href='/uid/30153338.html' ><img src="http://passport.ixpub.net/data/avatar/030/15/33/38_avatar_small.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'" /></a></div>
					  <div class="Blog_right_font1">
                                              						<p class="Blog_p5"><span><a href='/uid/30153338.html' ><span>fanqiepangpang</span></a></span>2015-03-09 12:12:43</p>
                                              						<p class="Blog_p6">好文章！<br />另外，请教下，当被发送的signal在相应进程的pending里面置位之后，这个进程被调度起来之后，什么地方会去处理这个pending的signal，我没找到相应的code。。</p>                                     
						<div class="div1"><a href="javascript:void(0);" class="Blog_a10"  toid='30153338' bid='4061386' cid='621049' tname='fanqiepangpang'>回复</a> | <a href="javascript:;" onclick="linkto();showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');" class='box_report'>举报</a></div>
						<!-- 评论占位框-->
						<div class='z_move_comment' style='display:none'>
						</div>
					  </div>
					  <div class="Blog_line1"></div>
					</div>
																<!--包含引用-->
					<div class="Blog_right1_8">
					  <div class="Blog_right_img1"><a href='/uid/24774106.html' ><img src="http://passport.ixpub.net/data/avatar/024/77/41/06_avatar_small.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'" /></a></div>
					  <div class="Blog_right_font1">
						<p class="Blog_p5"><span><a href='/uid/24774106.html' >Bean_lee</a></span>2014-01-20 14:34:36</p>
												<p class="Blog_p7"><a href='/uid/16125873.html'>qxhgd</a>：bean兄，文章写的很赞啊！<br />请教下，你这篇文章的图用什么软件画的？<br />就signal.c里的函数调用关系那幅图。</p>
												<p class="Blog_p8">不好意思，这个图是我借用的参考文献里面的图。其他的图是我用yED绘制的</p><span class="span_text1"><a href="javascript:void(0);" class="Blog_a10" toid='24774106' bid='4061386' cid='607965' tname='Bean_lee' >回复</a> | <a href="javascript:;" onclick="linkto();showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');" class='box_report' >举报</a></span>
						<!-- 评论占位框-->
						<div class='z_move_comment' style='display:none'></div>
					  </div>
					  <div class="Blog_line1"></div>
					</div>
																<!--不包含引用-->
					<div class="Blog_right1_8">
					  <div class="Blog_right_img1"><a href='/uid/16125873.html' ><img src="http://passport.ixpub.net/data/avatar/016/12/58/73_avatar_small.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'" /></a></div>
					  <div class="Blog_right_font1">
                                              						<p class="Blog_p5"><span><a href='/uid/16125873.html' ><span>qxhgd</span></a></span>2014-01-20 14:26:43</p>
                                              						<p class="Blog_p6">bean兄，文章写的很赞啊！<br />请教下，你这篇文章的图用什么软件画的？<br />就signal.c里的函数调用关系那幅图。</p>                                     
						<div class="div1"><a href="javascript:void(0);" class="Blog_a10"  toid='16125873' bid='4061386' cid='607964' tname='qxhgd'>回复</a> | <a href="javascript:;" onclick="linkto();showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');" class='box_report'>举报</a></div>
						<!-- 评论占位框-->
						<div class='z_move_comment' style='display:none'>
						</div>
					  </div>
					  <div class="Blog_line1"></div>
					</div>
																<!--包含引用-->
					<div class="Blog_right1_8">
					  <div class="Blog_right_img1"><a href='/uid/24774106.html' ><img src="http://passport.ixpub.net/data/avatar/024/77/41/06_avatar_small.jpg" onerror="this.onerror=null;this.src='http://passport.ixpub.net/images/noavatar_small.gif'" /></a></div>
					  <div class="Blog_right_font1">
						<p class="Blog_p5"><span><a href='/uid/24774106.html' >Bean_lee</a></span>2014-01-18 21:16:24</p>
												<p class="Blog_p7"><a href='/uid/28032128.html'>lmnos</a>：彬兄写的精彩<img src="/image/qqface/63.gif" /><img src="/image/qqface/63.gif" /></p>
												<p class="Blog_p8">呵呵，新年第一个系列，写的比较用心。</p><span class="span_text1"><a href="javascript:void(0);" class="Blog_a10" toid='24774106' bid='4061386' cid='607906' tname='Bean_lee' >回复</a> | <a href="javascript:;" onclick="linkto();showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');" class='box_report' >举报</a></span>
						<!-- 评论占位框-->
						<div class='z_move_comment' style='display:none'></div>
					  </div>
					  <div class="Blog_line1"></div>
					</div>
											<!-- 评论分页-->
		<div class="Blog_right1_6 Blog_right1_12">
        <ul id="yw0" class="yiiPager"><li class="first hidden"><a href="/uid-24774106-id-4061386.html">首页</a></li>
<li class="previous hidden"><a href="/uid-24774106-id-4061386.html">上一页</a></li>
<li class="page selected"><a href="/uid-24774106-id-4061386.html">1</a></li>
<li class="page"><a href="/uid-24774106-id-4061386.html?page=2">2</a></li>
<li class="next"><a href="/uid-24774106-id-4061386.html?page=2">下一页</a></li>
<li class="last"><a href="/uid-24774106-id-4061386.html?page=2">末页</a></li></ul>		</div>
		<!-- 评论分页-->
        <div class="Blog_right1_10">
          <div class="Blog_tit3">评论热议</div>
		  		 <!--未登录 -->
        <div class="Blog_right1_8">
          <div class="nologin_con1"> 请登录后评论。
            <p><a href="/site/login.html"  onclick="linkto()">登录</a> <a href="http://sso.chinaunix.net/Register?return_url=http%3A%2F%2Ft.cublog.com%2F">注册</a></p>
          </div>
        </div>
        <br>
        <div>
            <div style="float:left;margin-left:70px;margin-right:10px;">
             <script type="text/javascript">
            var cpro_id = "u1625692";
            </script>
            <script src="http://cpro.baidustatic.com/cpro/ui/c.js" type="text/javascript"></script>
            </div>
            <div style="margin-left:10px;">
            <script type="text/javascript">
            var cpro_id = "u1625694";
            </script>
            <script src="http://cpro.baidustatic.com/cpro/ui/c.js" type="text/javascript"></script>
            </div>
        </div>
		
        </div>
      </div>
    </div>
  </div>
  <input type='hidden' id='report_url' value='/blog/ViewReport.html' />

<script type="text/javascript">
  	//测试字符串的长度 一个汉字算2个字节
	function mb_strlen(str)
	{
		var len=str.length;
		var totalCount=0;
		for(var i=0;i<len;i++)
		{
			var c = str.charCodeAt(i);
			if ((c >= 0x0001 && c <= 0x007e) || (0xff60<=c && c<=0xff9f)) {
				totalCount++;
			}else{
				totalCount+=2;
			}
		}
		return totalCount;
	}
	/*
	var Util = {};
	Util.calWbText = function (text, max){
		if(max === undefined)
			max = 500;
		var cLen=0;
		var matcher = text.match(/[^\x00-\xff]/g),
			wlen  = (matcher && matcher.length) || 0;
		//匹配url链接正则 http://***
		var pattern = /http:\/\/([\w-]+\.)+[\w-]+(\/*[\w-\.\/\?%&=][^\s^\u4e00-\u9fa5]*)?/gi;
		//匹配的数据存入数组
		var arrPt = new Array();
		var i = 0;
		while((result = pattern.exec(text)) != null){
			arrPt[i] = result[0];
			i++;
		}
		//替换掉原文本中的链接
		for(var j = 0;j<arrPt.length;j++){
			text = text.replace(arrPt[j],"");
		}
		//减掉链接所占的长度
		return Math.floor((max*2 - text.length - wlen)/2 - 12*i);
	};
	*/
	var allowComment = '0';
	
	//举报弹出层
	function showJuBao(url, cid){
		
			$.cover(false);
			asyncbox.open({
				id  : 'report_thickbox',
				url : url,
				title : '举报违规',
				width : 378,
				height : 240,
				scroll : 'no',
				data : {
					'cid'	 : cid,
					'idtype' : 2 ,
                                        'blogurl' : window.location.href
				},
				callback : function(action){
					if(action == 'close'){
						$.cover(false);
					}
				}
			});
	}

	$(function(){

		//创建管理员删除的弹出层
		$('#admin_article_del').click(function(){
			$.cover(false);
			asyncbox.open({
				id : 'class_thickbox',
				html : '<div class="HT_layer3_1"><ul><li class="HT_li1">操作原因：<select class="HT_sel7" id="del_type" name="del_type"><option value="广告文章">广告文章</option><option value="违规内容">违规内容</option><option value="标题不明">标题不明</option><option value="文不对题">文不对题</option></select></li><li class="HT_li1" ><input class="HT_btn4" id="admin_delete"  type="button" /></li></ul></div>',
				title : '选择类型',
				width : 300,
				height : 150,
				scroll : 'no',
				callback : function(action){
					if(action == 'close'){
						$.cover(false);
					}
				}
			});
		});
		$('#admin_delete').live('click' , function(){
			///blog/logicdel/id/3480184/url/%252Fblog%252Findex.html.html
			var type = $('#del_type').val();
			var url = '/blog/logicdel/id/4061386/url/%252Fuid%252F24774106.html.html';
			window.location.href= url + '?type=' + type;
		});


		//顶  js中暂未添加&过滤 
		$('#digg').live('click' , function(){

			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}

			var bid = $('#digg').attr('bid');
			var url = $('#digg').attr('url');

			var digg_str = $.cookie('digg_id');
			if(digg_str != null)
			{
				var arr= new Array(); //定义一数组

				arr = digg_str.split(","); //字符分割     
				for( i=0 ; i < arr.length ; i++ )   
				{   
					if(bid == arr[i])
					{
						showErrorMsg('已经赞过该文章', '消息提示'); 
						return false;
					}
				} 
			}
			$.ajax({
				type:"POST",
				url:url,	
				data: {
					'bid' : bid 
				},
				dataType: 'json',
				success:function(msg){
					if(msg.error == 0)
					{
						var num = parseInt($('#digg_num').html(),10);
						num += 1;
						$('#digg_num').html(num);
						$('#digg').die();

						if(digg_str == null)
						{
							$.cookie('digg_id', bid, {expires: 30 , path: '/'});
						}
						else
						{
							$.cookie('digg_id', digg_str + ',' + bid, {expires: 30 , path: '/'});
						}
						showSucceedMsg('谢谢' , '消息提示');
					}
					else if(msg.error == 1)
					{
						//showErrorMsg(msg.error_content , '消息提示'); 
						showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
					}
					else if(msg.error == 2)
					{
						showErrorMsg(msg.error_content , '消息提示'); 
					}
				}
			});
		});
		//举报弹出层
		/*$('.box_report').live('click' , function(){
			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}
			var url = $('#report_url').val();
			var cid = $(this).attr('cid');
			$.cover(false);
			asyncbox.open({
				id  : 'report_thickbox',
				url : url,
				title : '举报违规',
				width : 378,
				height : 240,
				scroll : 'no',
				data : {
					'cid'	 : cid,
					'idtype' : 2 
				},
				callback : function(action){
					if(action == 'close'){
						$.cover(false);
					}
				}
			});
		});*/


		//评论相关代码
		
		//点击回复显示评论框
		$('.Blog_a10').live('click' , function(){
			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}

			if(allowComment == 1)
			{
				showErrorMsg('该博文不允许评论' , '消息提示'); 
				return false;
			}
			var tid = $(this).attr('toid');//留言作者id
			var bid = $(this).attr('bid');//blogid
			var cid = $(this).attr('cid');//留言id
			var tname = $(this).attr('tname');
                         			var tpl  = '<div class="Blog_right1_9">';
				tpl +=	 '<div class="div2">';
				tpl +=     '<textarea name="" cols="" rows="" class="Blog_ar1_1" id="rmsg">文明上网，理性发言...</textarea>';
				tpl +=	 '</div>';
				tpl +=   '<div class="div3">';
				tpl +=		'<div class="div3_2"><a href="javascript:void(0);" class="Blog_a11" id="quota_sbumit" url="/Comment/PostComment.html" tid="'+tid+'" bid="'+bid+'" cid="'+cid+'" tname="'+tname+'" ></a><a href="javascript:void(0)" id="qx_comment" class="Blog_a12"></a></div>';
				tpl +=		'<div class="div3_1"><a href="javascript:void(0);" id="mface"><span></span>表情</a></div>';
				tpl +=		'<div class="clear"></div>';
				tpl +=	 '</div>';
				tpl +=  '</div>';
                                 			$('.z_move_comment').html('');
			$(this).parents('.Blog_right1_8').find('.z_move_comment').html(tpl).show();
		});
		//引用的评论提交
		$('#quota_sbumit').live('click' , function(){

			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}

			var bid   = $(this).attr('bid');
			var tid   = $(this).attr('tid');//被引用人的id
			var qid   = $(this).attr('cid');//引用的id
			var url = $(this).attr('url');
			var text = $('#rmsg').val();
			var tname = $(this).attr('tname');
			if(text == '' || text=='文明上网，理性发言...')
			{
				showErrorMsg('评论内容不能为空！' , '消息提示'); 
				return false;
			}
			else
			{
				if(mb_strlen(text) > 1000){
					showErrorMsg('评论内容不能超过500个汉字' , '消息提示'); 
					return false;
				}
			}
		    $.ajax({
		        type: "post",
			    url: url ,
			    data: {'bid': bid , 'to' : tid , 'qid' : qid , 'text': text , 'tname' : tname },
				dataType: 'json',
			    success: function(data){
				    if(data.code == 1){
						var tpl =  '<div class="Blog_right1_8">';
							tpl+=     '<div class="Blog_right_img1"><a href="' +data.info.url+ '" >' + data.info.header + '</a></div>';
							tpl+=     '<div class="Blog_right_font1">';
							tpl+=         '<p class="Blog_p5"><span><a href="' +data.info.url+ '" >' + data.info.username + '</a></span>' + data.info.dateline + '</p>';
							tpl+=         '<p class="Blog_p7"><a href="' + data.info.quota.url + '">' + data.info.quota.username + '</a>：'+ data.info.quota.content + '</p>';
							tpl+=         '<p class="Blog_p8">' + data.info.content + '</p><span class="span_text1"><a href="javascript:void(0);" class="Blog_a10" toid=' + data.info.fuid + ' bid=' + data.info.bid + ' cid=' + data.info.cid + '  tname = ' + data.info.username + ' >回复</a> | 　<a class="comment_del_mark" style="cursor:pointer" url="' + data.info.delurl + '" >删除</a>　| 　<a href="javascript:showJuBao(\'/blog/ViewReport.html\','+data.info.cid+')" class="box_report" cid="' + data.info.cid + '" >举报</a></span></div>';
							tpl+=         '<div class="z_move_comment" style="display:none"></div>';
							tpl+=	      '<div class="Blog_line1"></div></div>';
							$('#replyList .Blog_right1_8:first').before(tpl);
							$('.z_move_comment').html('').hide();
				    }
					else if(data.code == -1){
						//showErrorMsg(data.info , '消息提示'); 
						showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
			        }
                },
			    error: function(){//请求出错处理
                        
                }
			});
		});
		//底部发表评论
		$('#submitmsg').click(function(){
			if(allowComment == 1)
			{
				showErrorMsg('该博文不允许评论' , '消息提示'); 
				return false;
			}
			var bid   = $(this).attr('bid');
			var toid  = $(this).attr('toid');
			var text = $('#reply').val();
			var url = $(this).attr('url');
			if(text == '' || text=='文明上网，理性发言...')
			{
				showErrorMsg('评论内容不能为空！' , '消息提示'); 
				return false;
			}
			else
			{
				if(mb_strlen(text) > 1000){
					showErrorMsg('评论内容不能超过500个汉字' , '消息提示'); 
					return false;
				}
			}
		    $.ajax({
		        type: "post",
			    url: url ,
			    data: {'bid': bid , 'to' : toid ,'text': text},
				dataType: 'json',
			    success: function(data){
				    if(data.code == 1)
					{
						var tpl   = '<div class="Blog_right1_8">';
							tpl  +=   '<div class="Blog_right_img1"><a href="' +data.info.url+ '" >' + data.info.header + '</a></div>';
							tpl  +=	  '<div class="Blog_right_font1">';
							tpl  +=       '<p class="Blog_p5"><span><a href="' +data.info.url+ '" >' + data.info.username + '</a></span>' + data.info.dateline + '</p>';
							tpl  +=       '<p class="Blog_p6">' + data.info.content + '</p>';
							tpl  +=		  '<div class="div1"><a href="javascript:void(0);" class="Blog_a10"  toid=' + data.info.fuid + ' bid=' + data.info.bid + ' cid=' + data.info.cid + '>回复</a> | 　<a class="comment_del_mark" style="cursor:pointer" url="' + data.info.delurl + '">删除</a>　| 　<a href="javascript:showJuBao(\'/blog/ViewReport.html\','+data.info.cid+')" class="box_report" cid="' + data.info.cid + '">举报</a></div>';
							tpl  +=		  '<div class="z_move_comment" style="display:none"></div>';
							tpl  +=    '</div><div class="Blog_line1"></div></div>';
							$('.Blog_tit3:first').after(tpl);
							$('#reply').val('文明上网，理性发言...');
					}
					else if(data.code == -1)
					{
						showErrorMsg(data.info , '消息提示'); 
			        }
                },
			    error: function(){//请求出错处理
                        
                }
		    });
			
		});
		//底部评论重置
		$('#reset_comment').click(function(){
			$('#reply').val('文明上网，理性发言...');
		});
		//取消回复
		$('#qx_comment').live('click' , function(){
			$('.z_move_comment').html('').hide();
		});


		$('#rmsg, #reply').live({
		    focus:function(){
			    if($(this).val() == '文明上网，理性发言...'){
			        $(this).val('');
			    }
			},
			blur:function(){
		        if($(this).val() == ''){
			        $(this).val('文明上网，理性发言...');
			    }
			}
		});
		//删除留言确认
		$('.comment_del_mark').live('click' , function(){
			var url = $(this).attr('url');
			asyncbox.confirm('删除留言','确认', function(action){
				if(action == 'ok')
				{
					location.href = url;
				}
			});
		});
		//删除时间确认
		$('.del_article_id').click(function(){
			var delurl = $(this).attr('delurl');
			asyncbox.confirm('删除文章','确认', function(action){
				if(action == 'ok')
				{
					location.href = delurl;
				}
			});
		});
		/*
		//字数限制
		$('#rmsg, #reply').live('keyup', function(){
			var id = $(this).attr('id');
			var left = Util.calWbText($(this).val(), 500);
			var eid = '#errmsg';
			
			if(id == 'reply') eid =  '#rerrmsg';
			if (left >= 0)
		        $(eid).html('您还可以输入<span>' + left + '</span>字');
		    else
		        $(eid).html('<font color="red">您已超出<span>' + Math.abs(left) + '</span>字 </font>');
		});
		*/
		//加载表情
	    $('#face').qqFace({id : 'facebox1', assign : 'reply', path : '/image/qqface/'});
	    $('#mface').qqFace({id : 'facebox', assign : 'rmsg', path:'/image/qqface/'});
	    
		/*
		$('#class_one_id').change(function(){
			alert(123213);
			var id = parseInt($(this).val() , 10);
			if(id == 0) return false;
			$('.hidden_son_class span').each(function( index , dom ){
				if( dom.attr('cid')  == id )
				{
				}
			});
		});
		*/
		//转载文章
		var turn_url = "/blog/viewClassPart.html";
		$('#repost_bar').click(function(){
			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}
			var id = $(this).attr('bid');
			asyncbox.open({
				id  : 'turn_class_thickbox',
				url : turn_url,
				title : '转载文章',
				width : 330,
				height : 131,
				scroll : 'no',
				data : {
					'id'	 : id
				},
				callback : function(action){
					if(action == 'close'){
						$.cover(false);
					}
				}
			});
		});
		/*
	    //转发文章
	    $('#repost_bar').live('click' , function(){
			if(isOnLine == '' )
			{
				//showErrorMsg('登录之后才能进行此操作' , '消息提示');
				showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				return false;
			}
	    	var bid  = $(this).attr('bid');
	    	var url  = $(this).attr('url');
	    	asyncbox.confirm('转载文章','确认', function(action){
	    	  if(action == 'ok'){
	    	    $.ajax({
				type:"POST",
				url:url,	
				data: {
					'bid' : bid 
				},
				dataType: 'json',
				success:function(msg){
				  if(msg.error == 0){
				    showSucceedMsg('转发成功！', '消息提示');
				  }else if(msg.error == 1){
				    //location.href = '/index.php?r=site/login';
					showErrorMsg('操作失败,您需要先登录!', '消息提示', '/site/login.html');
				  }else{
				    showErrorMsg(msg.error_content, '消息提示');
			      }
				}
			  });
	    	  }
	    	});

		});
		*/

	});
</script>
<!--该部分应该放在输出代码块的后面才起作用 -->
<script type="text/javascript">

SyntaxHighlighter.autoloader(
	'applescript			/highlight/scripts/shBrushAppleScript.js',
	'actionscript3 as3		/highlight/scripts/shBrushAS3.js',
	'bash shell				/highlight/scripts/shBrushBash.js',
	'coldfusion cf			/highlight/scripts/shBrushColdFusion.js',
	'cpp c					/highlight/scripts/shBrushCpp.js',
	'c# c-sharp csharp		/highlight/scripts/shBrushCSharp.js',
	'css					/highlight/scripts/shBrushCss.js',
	'delphi pascal			/highlight/scripts/shBrushDelphi.js',
	'diff patch pas			/highlight/scripts/shBrushDiff.js',
	'erl erlang				/highlight/scripts/shBrushErlang.js',
	'groovy					/highlight/scripts/shBrushGroovy.js',
	'java					/highlight/scripts/shBrushJava.js',
	'jfx javafx				/highlight/scripts/shBrushJavaFX.js',
	'js jscript javascript	/highlight/scripts/shBrushJScript.js',
	'perl pl				/highlight/scripts/shBrushPerl.js',
	'php					/highlight/scripts/shBrushPhp.js',
	'text plain				/highlight/scripts/shBrushPlain.js',
	'py python				/highlight/scripts/shBrushPython.js',
	'ruby rails ror rb		/highlight/scripts/shBrushRuby.js',
	'scala					/highlight/scripts/shBrushScala.js',
	'sql					/highlight/scripts/shBrushSql.js',
	'vb vbnet				/highlight/scripts/shBrushVb.js',
	'xml xhtml xslt html	/highlight/scripts/shBrushXml.js'
);
SyntaxHighlighter.all();


function code_hide(id){
	var code = document.getElementById(id).style.display;
	if(code == 'none'){
		document.getElementById(id).style.display = 'block';
	}else{
		document.getElementById(id).style.display = 'none';
	}
}
</script>
<!--回顶部js2011.12.30-->
<script language="javascript">
 lastScrollY=0;
 function heartBeat(){
 var diffY;
 if (document.documentElement && document.documentElement.scrollTop)
     diffY = document.documentElement.scrollTop;
 else if (document.body)
     diffY = document.body.scrollTop
 else
     {/*Netscape stuff*/}
 percent=.1*(diffY-lastScrollY);
 if(percent>0)percent=Math.ceil(percent);
 else percent=Math.floor(percent);
 document.getElementById("full").style.top=parseInt(document.getElementById("full").style.top)+percent+"px";
 lastScrollY=lastScrollY+percent;
 if(lastScrollY<200)
 {
 document.getElementById("full").style.display="none";
 }
 else
 {
 document.getElementById("full").style.display="block";
 }
 }
 var gkuan=document.body.clientWidth;
 var ks=(gkuan-960)/2-30;
 suspendcode="<div id=\"full\" style='right:4px;POSITION:absolute;TOP:500px;z-index:100;width:20px; height:50px;cursor:pointer;'><a href=\"javascript:void(0)\" onclick=\"window.scrollTo(0,0);\"><img src=\"\/image\/top.png\" /></a></div>"
 document.write(suspendcode);
 window.setInterval("heartBeat()",1);
 </script>  <!-- footer -->
  <div class="Blog_footer" style='clear:both'>
    <div><a href="http://www.chinaunix.net/about/index.shtml" target="_blank" rel="nofollow">关于我们</a> | <a href="http://www.it168.com/bottomfile/it168.shtml" target="_blank" rel="nofollow">关于IT168</a> | <a href="http://www.chinaunix.net/about/connect.html" target="_blank" rel="nofollow">联系方式</a> | <a href="http://www.chinaunix.net/about/service.html" target="_blank" rel="nofollow">广告合作</a> | <a href="http://www.it168.com//bottomfile/flgw/fl.htm" target="_blank" rel="nofollow">法律声明</a> | <a href="http://sso.chinaunix.net/Register?return_url=http%3A%2F%2Fblog.chinaunix.net%2F
" target="_blank" rel="nofollow">免费注册</a>
      <p>Copyright  2001-2010 ChinaUnix.net All Rights Reserved 北京皓辰网域网络信息技术有限公司. 版权所有 </p>
      <div>感谢所有关心和支持过ChinaUnix的朋友们
        <p>京ICP证041476号 京ICP证060528号</p>
      </div>
    </div>
  </div>
</div>
<script language="javascript">

//全局错误提示弹出框
function showErrorMsg(content, title, url){
	var url = url || '';
	var title = title || '消息提示';
	var html = '';
	html += '<div class="HT_layer3_1 HT_layer3_2"><ul><li><p><span class="login_span1"></span>' + content + '</p></li>';
	if(url == '' || url.length == 0){
		html += '<li class="HT_li1"><input type="button" class="HT_btn2"  onclick=\'close_windows("error_msg")\'></li>';	
	} else {
		html += '<li class="HT_li1"><input type="button" class="login_btn1" onclick="location.href=\'' + url + '\'"></li>';
	}
	html += '</ul></div>';
	$.cover(true);
	   asyncbox.open({
		 id: 'error_msg',
		 title : title,
		 html : html,
		 'callback' : function(action){
			 if(action == 'close'){
				 $.cover(false);
			 }
		 }
	});
}

//全局正确提示
function showSucceedMsg(content, title , url ){
	var url = url || '';
	var title = title || '消息提示';
	var html = '';
	html += '<div class="HT_layer3_1 HT_layer3_2"><ul><li><p><span class="login_span2"></span>' + content + '</p></li>';
	if(url == '' || url.length == 0){
		html += '<li class="HT_li1"><input type="button" class="HT_btn2"  onclick=\'close_windows("error_msg")\'></li>';	
	} else {
		html += '<li class="HT_li1"><input type="button" class="HT_btn2" onclick="location.href=\'' + url + '\'"></li>';
	}
	html += '</ul></div>';
	$.cover(true);
	asyncbox.open({
		 id: 'error_msg',
		 title : title,
		 html : html,
		 'callback' : function(action){
			 if(action == 'close'){
				 $.cover(false);
			 }
		 }
	});
}

//关闭指定id的窗口
function close_windows(id){
	$.cover(false);
	$.close(id);
}


//公告
var tID;
var tn;                        // 高度
var nStopTime = 5000;        // 不同行间滚动时间隔的时间，值越小，移动越快
var nSpeed = 50;            // 滚动时，向上移动一像素间隔的时间，值越小，移动越快
var isMove = true;
var nHeight = 25;
var nS = 0;
var nNewsCount = 3;

/**
 * n 用于表示是否为第一次运行
 **/
function moveT(n)
{
    clearTimeout(tID)
    var noticev2 = document.getElementById("noticev2")
    nS = nSpeed;
    
    // 只在第一次调用时运行，初始化环境（有没有参数）
    if (n)
    {
        // 设置行高
        noticev2.style.lineHeight = nHeight + "px";
        // 初始化显示位置
        tn = 0;
        // 刚进入时在第一行停止时间
        nS = nStopTime;
    }
    
    // 判断鼠标是否指向层
    if (isMove)
    {
        // 向上移动一像素
        tn--;
        // 如果移动到最下面一行了，则移到顶行
        if (Math.abs(tn) == nNewsCount * nHeight)
        {
            tn = 0;
        }
        // 设置位置
        noticev2.style.marginTop = tn + "px";
        // 完整显示一行时，停止一段时间
        if (tn % nHeight == 0)
        {
            nS = nStopTime;
        }
    }

    tID = setTimeout("moveT()", nS);
}
moveT(1);    // 此处可以传入任何参数
</script>
<script language="javascript" src="http://stat.it168.com/pv.js"></script>
<script>
function sendPV(){
    var pvTrack = new PvTrack();
    pvTrack.type = 35; // 频道类别ID
    pvTrack.channel = 189; // 频道ID
    pvTrack.pageType = 0;
    pvTrack.track();
}
window.setTimeout("sendPV()", 1000);
</script>
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-20237423-2']);
  _gaq.push(['_setDomainName', '.chinaunix.net']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
<script type="text/javascript">
var _bdhmProtocol = (("https:" == document.location.protocol) ? " https://" : " http://");
document.write(unescape("%3Cscript src='" + _bdhmProtocol + "hm.baidu.com/h.js%3F0ee5e8cdc4d43389b3d1bfd76e83216b' type='text/javascript'%3E%3C/script%3E"));

function linkto(){
    setCookie("returnUrl", location.href, 1491102180, "/");
}
function linktoOut(){
    setCookie("returnOutUrl", location.href, 1491102180, "/");
}
//JS写COOKIE
function setCookie(name, value, expires, path, domain){
	if(!arguments[2]) expires = 3600 * 24;
	if(!arguments[3]) path = "";
	if(!arguments[4]) domain = "";
	var str=name+"="+escape(value);
	if(expires!=""){
		var date=new Date();
		date.setTime(date.getTime()+expires*1000);
		str+=";expires="+date.toGMTString();
	}
	if(path!=""){
		str+=";path="+path;//指定可访问cookie的目录
	}
	if(domain!=""){
		str+=";domain="+domain;//指定可访问cookie的域
	}
	document.cookie = str;
}

</script>
<script type="text/javascript" src="/js/jquery.qqFace.js"></script>
</body>
</html>
