  * 百度首页 <http://www.baidu.com/>
  * 登录 <javascript:;>
  * 注册 <https://passport.baidu.com/v2/?reg&regType=1&tpl=wk>

// // // <http://baike.baidu.com/>
新闻 <http://news.baidu.com/>网页 <http://www.baidu.com/>贴吧
<http://tieba.baidu.com/>知道 <http://zhidao.baidu.com/>音乐
<http://music.baidu.com/>图片 <http://image.baidu.com/>视频
<http://v.baidu.com/>地图 <http://map.baidu.com/>百科文库
<http://wenku.baidu.com/>
进入词条搜索词条帮助 <http://baike.baidu.com/help>

  * 关闭

<http://baike.baidu.com/view/9384752.htm>

首页 <http://baike.baidu.com/>

分类
    艺术 <http://baike.baidu.com/art>
    科学 <http://baike.baidu.com/science>
    自然 <http://baike.baidu.com/ziran>
    文化 <http://baike.baidu.com/wenhua>
    地理 <http://baike.baidu.com/dili>
    生活 <http://baike.baidu.com/shenghuo>
    社会 <http://baike.baidu.com/shehui>
    人物 <http://baike.baidu.com/renwu>
    经济 <http://baike.baidu.com/jingji>
    体育 <http://baike.baidu.com/tiyu>
    历史 <http://baike.baidu.com/lishi>

特色百科
    历史上的今天 <http://baike.baidu.com/calendar/>
    数字博物馆 <http://baike.baidu.com/museum/>
    史记·2015 <http://baike.baidu.com/shiji/2015?fr=navbar>
    城市百科 <http://baike.baidu.com/city/>
    二战百科 <http://baike.baidu.com/operation/worldwar2>
    非遗百科 <http://baike.baidu.com/feiyi?fr=dhlfeiyi>

用户
    蝌蚪团 <http://baike.baidu.com/kedou/>
    燃梦计划 <http://baike.baidu.com/event/ranmeng/>
    百科任务 <http://baike.baidu.com/task/>
    百科商城 <http://baike.baidu.com/mall/>

权威合作
    合作模式 <http://baike.baidu.com/operation/cooperation#joint>
    常见问题 <http://baike.baidu.com/operation/cooperation#issue>
    联系方式 <http://baike.baidu.com/operation/cooperation#connection>

手机百科
    网页版 <http://baike.baidu.com/m#wap>

//个人中心 <http://baike.baidu.com/usercenter>

<javascript:;> <http://baike.baidu.com/divideload/epoll>
收藏 查看我的收藏 <http://baike.baidu.com/uc/favolemma>
388 有用+1 已投票

<javascript:void(0);>
8


    epoll

    //编辑 <javascript:;> //锁定 <http://baike.baidu.com/view/10812319.htm> 

epoll是Linux内核 <http://baike.baidu.com/view/573460.htm>为处理大批量文
件描述符 <http://baike.baidu.com/view/1303430.htm>而作了改进的poll，是
Linux下多路复用IO接口select/poll的增强版本，它能显著提高程序在大量并发连
接 <http://baike.baidu.com/view/922692.htm>中只有少量活跃的情况下的系统
CPU利用率。另一点原因就是获取事件的时候，它无须遍历整个被侦听的描述符
集，只要遍历那些被内核IO事件异步唤醒而加入Ready队列的描述符集合就行了。
epoll除了提供select/poll那种IO事件的水平触发（Level Triggered）外，还提
供了边缘触发（Edge Triggered），这就使得用户空间程序有可能缓存IO状态，减
少epoll_wait/epoll_pwait的调用，提高应用程序效率。

外文名
    epoll 
优    点
    内核微调等 

工作方式
    LT和ET 
系统调用
    epoll_create, epoll_ctl等 


    目录

 1. 1 优点 <#1>
 2. 2 内核微调 <#2>
 3. 3 使用 <#3>
 4. 4 系统调用 <#4>


    epoll优点

//编辑

<javascript:;>
*支持一个进程打开大数目的socket描述符*
select 最不能忍受的是一个进程所打开的FD是有一定限制的，由FD_SETSIZE设
置，默认值是2048。对于那些需要支持的上万连接数目的IM服务器来说显然太少
了。这时候你一是可以选择修改这个宏然后重新编译服务器代码，不过资料也同时
指出这样会带来网络效率的下
使用epoll进行高性能网络编程

<http://baike.baidu.com/pic/epoll/10738144/0/d56b36345615de005ab5f56f?fr=lemma&ct=single>
使用epoll进行高性能网络编程
降，二是可以选择多进程的解决方案（传统的Apache方案），不过虽然linux上面
创建进程的代价比较小，但仍旧是不可忽视的，加上进程间数据同步
<http://baike.baidu.com/view/3189918.htm>远比不上线程间同步的高效，所以
也不是一种完美的方案。不过 epoll则没有这个限制，它所支持的FD上限是最大可
以打开文件的数目，这个数字一般远大于2048,举个例子，在1GB内存的机器上大约
是10万左右，具体数目可以cat /proc/sys/fs/file-max查看，一般来说这个数目
和系统内存 <http://baike.baidu.com/view/404470.htm>关系很大。
*IO效率不随FD数目增加而线性下降*
传统的select/poll另一个致命弱点就是当你拥有一个很大的socket集合，不过由
于网络延时 <http://baike.baidu.com/view/1779636.htm>，任一时间只有部分的
socket是“活跃”的，但是select/poll每次调用都会线性扫描全部的集合，导致效
率呈现线性下降。但是epoll不存在这个问题，它只会对“活跃”的socket进行操作
---这是因为在内核实现中epoll是根据每个fd上面的callback函数实现的。那么，
只有“活跃”的socket才会主动的去调用 callback函数，其他idle状态socket则不
会，在这点上，epoll实现了一个“伪”AIO，因为这时候推动力在os内核。在一些
benchmark中，如果所有的socket基本上都是活跃的---比如一个高速LAN环
境，epoll并不比select/poll有什么效率，相反，如果过多使用epoll_ctl,效率相
比还有稍微的下降。但是一旦使用idle connections模拟WAN环境，epoll的效率就
远在select/poll之上了。
*使用mmap加速内核与用户空间的消息传递*
这点实际上涉及到epoll的具体实现了。无论是select,poll还是epoll都需要内核
把FD消息通知给用户空间，如何避免不必要的内存拷贝就很重要，在这点
上，epoll是通过内核与用户空间mmap同一块内存实现的。而如果你像我一样从2.5
内核就关注epoll的话，一定不会忘记手工 mmap这一步的。


    epoll内核微调

//编辑

<javascript:;>
这一点其实不算epoll的优点了，而是整个linux平台的优点。也许你可以怀疑
linux平台，但是你无法回避linux平台赋予你微调内核的能力。比如，内核TCP/IP
协议 <http://baike.baidu.com/view/7649.htm>栈使用内存池管理sk_buff结构，
那么可以在运行时期动态调整这个内存pool（skb_head_pool）的大小--- 通过
echo XXXX>/proc/sys/net/core/hot_list_length完成。再比如listen函数的第2
个参数（TCP完成3次握手的数据包队列长度），也可以根据你平台内存大小动态调
整。更甚至在一个数据包个数目巨大但同时每个数据包本身大小却很小的特殊系统
上尝试最新的NAPI网卡驱动架构。


    epoll使用

//编辑

<javascript:;>
令人高兴的是，2.6内核的epoll比其2.5开发版本的/dev/epoll简洁了许多，所
以，大部分情况下，强大的东西往往是简单的。唯一有点麻烦是epoll有2种工作方
式：LT和ET。
LT（level triggered）是缺省的工作方式，并且同时支持block和no-block
socket.在这种做法中，内核 <http://baike.baidu.com/view/1366.htm>告诉你一
个文件描述符 <http://baike.baidu.com/view/1303430.htm>是否就绪了，然后你
可以对这个就绪的fd进行IO操作。如果你不作任何操作，内核还是会继续通知你
的，所以，这种模式编程出错误可能性要小一点。传统的select/poll都是这种模
型的代表。
ET （edge-triggered）是高速工作方式，只支持non-block socket。在这种模式
下，当描述符从未就绪变为就绪时，内核通过epoll告诉你。然后它会假设你知道
文件描述符已经就绪，并且不会再为那个文件描述符发送更多的就绪通知，直到你
做了某些操作导致那个文件描述符不再为就绪状态了（比如，你在发送，接收或者
接收请求，或者发送接收的数据少于一定量时导致了一个EWOULDBLOCK 错误）。但
是请注意，如果一直不对这个fd作IO操作（从而导致它再次变成未就绪），内核
<http://baike.baidu.com/view/1366.htm>不会发送更多的通知（only once），
不过在TCP协议中，ET模式的加速效用仍需要更多的benchmark确认。
ET和LT的区别就在这里体现，LT事件不会丢弃，而是只要读buffer里面有数据可以
让用户读，则不断的通知你。而ET则只在事件发生之时通知。可以简单理解为LT是
水平触发，而ET则为边缘触发。LT模式只要有事件未处理就会触发，而ET则只在高
低电平变换时（即状态从1到0或者0到1）触发。


    epoll系统调用

//编辑

<javascript:;>
epoll相关的系统调用有：epoll_create, epoll_ctl和epoll_wait。Linux-2.6.19
又引入了可以屏蔽指定信号的epoll_wait: epoll_pwait。至此epoll家族已全。其
中epoll_create用来创建一个epoll文件描述符
<http://baike.baidu.com/view/1303430.htm>，epoll_ctl用来添加/修改/删除需
要侦听的文件描述符及其事件，epoll_wait/epoll_pwait接收发生在被侦听的描述
符上的，用户感兴趣的IO事件。epoll文件描述符用完后，直接用close关闭即可，
非常方便。事实上，任何被侦听的文件符只要其被关闭，那么它也会自动从被侦听
的文件描述符集合中删除，很是智能。
每次添加/修改/删除被侦听文件描述符都需要调用epoll_ctl，所以要尽量少地调
用epoll_ctl，防止其所引来的开销抵消其带来的好处。有的时候，应用中可能存
在大量的短连接 <http://baike.baidu.com/view/3104205.htm>（比如说Web服务
器），epoll_ctl将被频繁地调用，可能成为这个系统的瓶颈。
A：IO效率。
在大家苦苦的为在线人数的增长而导致的系统资源吃紧上的问题正在发愁的时
候，Linux 2.6内核 <http://baike.baidu.com/view/1366.htm>中提供的System
Epoll为我们提供了一套完美的解决方案。传统的select以及poll的效率会因为在
线人数的线形递增而导致呈二次乃至三次方的下降，这些直接导致了网络服务器
<http://baike.baidu.com/view/813.htm>可以支持的人数有了个比较明显的限制。
自从Linux提供了/dev/epoll的设备以及后来2.6内核中对/dev/epoll设备的访问的
封装（System Epoll）之后，这种现象得到了大大的缓解，如果说几个月前，大家
还对epoll不熟悉，那么现在来说的话，epoll的应用已经得到了大范围的普及。
那么究竟如何来使用epoll呢？其实非常简单。
通过在包含一个头文件#include <sys/epoll.h>以及几个简单的API将可以大大的
提高你的网络服务器的支持人数。
首先通过epoll_create(int maxfds)来创建一个epoll的句柄，其中maxfds为你
epoll所支持的最大句柄数 <http://baike.baidu.com/view/395191.htm>。这个函
数会返回一个新的epoll句柄，之后的所有操作将通过这个句柄来进行操作。在用
完之后，记得用close()来关闭这个创建出来的epoll句柄。
之后在你的网络主循环里面，每一帧的调用epoll_wait(int epfd, epoll_event
*events, int max events, int timeout)来查询所有的网络接口，看哪一个可以
读，哪一个可以写了。基本的语法为：
?

<#>
1
	
|nfds=epoll_wait(kdpfd,events,maxevents,-1);|

其中kdpfd为用epoll_create创建之后的句柄，events是一个epoll_event*的指针
<http://baike.baidu.com/view/159417.htm>，当epoll_wait这个函数操作成功之
后，epoll_events里面将储存所有的读写事件。maxevents是最大事件数量。最后
一个timeout是epoll_wait的超时，为0的时候表示马上返回，为-1的时候表示一直
等下去，直到有事件发生，为任意正整数的时候表示等这么长的时间，如果一直没
有事件，则返回。一般如果网络主循环是单独的线程的话，可以用-1来等，这样可
以保证一些效率，如果是和主逻辑在同一个线程的话，则可以用0来保证主循环的
效率。
epoll_wait范围之后应该是一个循环，遍历所有的事件：
?

<#>
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
	
|nfds = epoll_wait(epfd,events,20,500);  |
|{|
|for||(n=0;n<nfds;++n)|
|{|
|if||(events[n].data.fd==listener)|
|{|
|//如果是主socket的事件的话，则表示|
|//有新连接进入了，进行新连接的处理。|
|client=accept(listener,(structsockaddr*)&local,&addrlen);|
|if||(client<0)|
|{|
|perror||(||"accept"||);|
|continue||;|
|}|
|setnonblocking(client);||//将新连接置于非阻塞模式|
|ev.events=EPOLLIN|EPOLLET;||//并且将新连接也加入EPOLL的监听队列。|
|//注意，这里的参数EPOLLIN|EPOLLET并没有设置对写socket的监听，|
|//如果有写操作的话，这个时候epoll是不会返回事件的，如果要对写操作|
|//也监听的话，应该是EPOLLIN|EPOLLOUT|EPOLLET|
|ev.data.fd=client;|
|if||(epoll_ctl(kdpfd,EPOLL_CTL_ADD,client,&ev)<0)|
|{|
|//设置好event之后，将这个新的event通过epoll_ctl加入到epoll的监听队列里面，|
|//这里用EPOLL_CTL_ADD来加一个新的epoll事件，通过EPOLL_CTL_DEL来减少一个|
|//epoll事件，通过EPOLL_CTL_MOD来改变一个事件的监听方式。|
|fprintf||(stderr,"epollsetinsertionerror:fd=%d0,client);|
|return||-1;d|
|}|
|}|
|elseif(event[n].events&EPOLLIN)|
|{|
|//如果是已经连接的用户，并且收到数据，|
|//那么进行读入|
|intsockfd_r;|
|if||((sockfd_r=event[n].data.fd)<0)||continue||;|
|read(sockfd_r,buffer,MAXSIZE);|
|//修改sockfd_r上要处理的事件为EPOLLOUT|
|ev.data.fd=sockfd_r;|
|ev.events=EPOLLOUT|EPOLLET;|
|epoll_ctl(epfd,EPOLL_CTL_MOD,sockfd_r,&ev)|
|}|
|elseif(event[n].events&EPOLLOUT)|
|{|
|//如果有数据发送|
|intsockfd_w=events[n].data.fd;|
|write(sockfd_w,buffer,||sizeof||(buffer));|
|//修改sockfd_w上要处理的事件为EPOLLIN|
|ev.data.fd=sockfd_w;|
|ev.events=EPOLLIN|EPOLLET;|
|epoll_ctl(epfd,EPOLL_CTL_MOD,sockfd_w,&ev)|
|}|
|do_use_fd(events[n].data.fd);|
|}|
|}|

对，epoll的操作就这么简单，总共不过4个API：epoll_create, epoll_ctl,
epoll_wait和close。
如果您对epoll的效率还不太了解，请参考之前关于网络游戏的网络编程
<http://baike.baidu.com/view/1317473.htm>等相关的文章。
【注1-star】（以上内容非本人提交）
范例源代码目的是为了循环产生ET，不能反映idle connection的状态，该代码结
构不可应用于实际。
【注1-end】
词条标签：
    计算机学 
//图集
epoll图册
<http://baike.baidu.com/pic/epoll/10738144/0/9a504fc2d56285359e7eed0692ef76c6a7ef637e?fr=lemma&ct=single>

V百科往期回顾

<http://baike.baidu.com/vbaike#gallary>

    <http://click.hm.baidu.com/clk?4cddc0be9eb2973e31d76575fd8fb9de> 

//

<javascript:;> //

<javascript:;>


            其他人还看

纠错
关闭纠错
poll

<http://baike.baidu.com/subview/2997591/20276300.htm>

poll <http://baike.baidu.com/subview/2997591/20276300.htm>

有错误 <javascript:;> 已反馈
nginx

<http://baike.baidu.com/view/926025.htm>

nginx <http://baike.baidu.com/view/926025.htm>

有错误 <javascript:;> 已反馈
IOCP

<http://baike.baidu.com/view/1256215.htm>

IOCP <http://baike.baidu.com/view/1256215.htm>

有错误 <javascript:;> 已反馈
libevent

<http://baike.baidu.com/view/1590523.htm>

libevent <http://baike.baidu.com/view/1590523.htm>

有错误 <javascript:;> 已反馈
文件描述符

<http://baike.baidu.com/view/1303430.htm>

文件描述符 <http://baike.baidu.com/view/1303430.htm>

有错误 <javascript:;> 已反馈
网络编程

<http://baike.baidu.com/view/1317473.htm>

网络编程 <http://baike.baidu.com/view/1317473.htm>

有错误 <javascript:;> 已反馈
select()

<http://baike.baidu.com/view/569212.htm>

select() <http://baike.baidu.com/view/569212.htm>

有错误 <javascript:;> 已反馈
socket

<http://baike.baidu.com/subview/13870/15994413.htm>

socket <http://baike.baidu.com/subview/13870/15994413.htm>

有错误 <javascript:;> 已反馈
Redis

<http://baike.baidu.com/view/4595959.htm>

Redis <http://baike.baidu.com/view/4595959.htm>

有错误 <javascript:;> 已反馈

    <http://baike.baidu.com/article/097c78352edef4e452495761.htm> 

//

<javascript:;>// <javascript:;>// <javascript:;>//

<javascript:;>

词条统计

      * 浏览次数：201954次
      * 编辑次数：48次历史版本
        <http://baike.baidu.com/historylist/epoll/10738144>
      * 最近更新：今天
      * 创建者：ilovebright <http://www.baidu.com/p/ilovebright>

//企业信用信息
/

/
/

/

/

/ 1 优点 <#1>
/

/ 2 内核微调 <#2>
/

/ 3 使用 <#3>
/

/ 4 系统调用 <#4>

<javascript:void(0);>

<javascript:void(0);>

<javascript:void(0);>

<javascript:void(0);>

<javascript:void(0);>
//


            猜你喜欢

  * 保健品代理
    <https://www.baidu.com/s?wd=%B1%A3%BD%A1%C6%B7%B4%FA%C0%ED&tn=SE_baikepcxf02_fcetbk02&lqsource=-1&dmaseid=dmaseid202&qid=017a15222e877b90>
  * 热血江湖传
    <https://www.baidu.com/s?wd=%C8%C8%D1%AA%BD%AD%BA%FE%B4%AB&tn=SE_baikepcxf02_fcetbk02&lqsource=-1&dmaseid=dmaseid202&qid=017a15222e877b90>
  * 乐视手机官网商城
    <https://www.baidu.com/s?wd=%C0%D6%CA%D3%CA%D6%BB%FA%B9%D9%CD%F8%C9%CC%B3%C7&tn=SE_baikepcxf02_fcetbk02&lqsource=-1&dmaseid=dmaseid202&qid=017a15222e877b90>
  * 律师事务所
    <https://www.baidu.com/s?wd=%C2%C9%CA%A6%CA%C2%CE%F1%CB%F9&tn=SE_baikepcxf02_fcetbk02&lqsource=-1&dmaseid=dmaseid202&qid=017a15222e877b90>
  * 最容易移民国家
    <https://www.baidu.com/s?wd=%D7%EE%C8%DD%D2%D7%D2%C6%C3%F1%B9%FA%BC%D2&tn=SE_baikepcxf02_fcetbk02&lqsource=-1&dmaseid=dmaseid202&qid=017a15222e877b90>
  * 青年旅舍
    <https://www.baidu.com/s?wd=%C7%E0%C4%EA%C2%C3%C9%E1&tn=SE_baikepcxf02_fcetbk02&lqsource=-1&dmaseid=dmaseid202&qid=017a15222e877b90>
  * 三亚湾家庭旅馆
    <https://www.baidu.com/s?wd=%C8%FD%D1%C7%CD%E5%BC%D2%CD%A5%C2%C3%B9%DD&tn=SE_baikepcxf02_fcetbk02&lqsource=-1&dmaseid=dmaseid202&qid=017a15222e877b90>
  * 股票k线图基础知识
    <https://www.baidu.com/s?wd=%B9%C9%C6%B1k%CF%DF%CD%BC%BB%F9%B4%A1%D6%AA%CA%B6&tn=SE_baikepcxf02_fcetbk02&lqsource=-1&dmaseid=dmaseid202&qid=017a15222e877b90>
  * 废气处理设备
    <https://www.baidu.com/s?wd=%B7%CF%C6%F8%B4%A6%C0%ED%C9%E8%B1%B8&tn=SE_baikepcxf02_fcetbk02&lqsource=-1&dmaseid=dmaseid202&qid=017a15222e877b90>
  * 电暖气
    <https://www.baidu.com/s?wd=%B5%E7%C5%AF%C6%F8&tn=SE_baikepcxf02_fcetbk02&lqsource=-1&dmaseid=dmaseid202&qid=017a15222e877b90>

//新手上路
    成长任务 <http://baike.baidu.com/usercenter/tasks#guide>
    编辑入门 <http://baike.baidu.com/help#main01>
    编辑规则 <http://baike.baidu.com/help#main06>
    百科术语 <http://baike.baidu.com/help#main05>

//我有疑问
    我要质疑 <http://baike.baidu.com/wikiui/doubt?lemmaId=10738144&fr=lemma>
    我要提问 <http://ikefu.baidu.com/baidubaike/chat.html>
    参加讨论
    <http://tieba.baidu.com/f?ie=utf-8&fr=bks0000&kw=%E7%99%BE%E5%BA%A6%E7%99%BE%E7%A7%91>
    意见反馈 <http://baike.baidu.com/feedback>

//投诉建议
    举报不良信息
    <http://tousu.baidu.com/baike/add?word=epoll&&submit_link=http%3A%2F%2Fbaike.baidu.com%2Flink%3Furl%3D6uxxD19oBZw3Fc3lV0IShfiMa-YD2eg3yPisqj057BOY_LuxiqZmRCT6oNMjwvlP1YRUb1sv8K8Iyj9Omz3ft_#1>
    未通过词条申诉
    <http://tousu.baidu.com/baike/add?word=epoll&&submit_link=http%3A%2F%2Fbaike.baidu.com%2Flink%3Furl%3D6uxxD19oBZw3Fc3lV0IShfiMa-YD2eg3yPisqj057BOY_LuxiqZmRCT6oNMjwvlP1YRUb1sv8K8Iyj9Omz3ft_#2>
    投诉侵权信息
    <http://tousu.baidu.com/baike/add?word=epoll&&submit_link=http%3A%2F%2Fbaike.baidu.com%2Flink%3Furl%3D6uxxD19oBZw3Fc3lV0IShfiMa-YD2eg3yPisqj057BOY_LuxiqZmRCT6oNMjwvlP1YRUb1sv8K8Iyj9Omz3ft_#4>
    封禁查询与解封
    <http://tousu.baidu.com/baike/add?word=epoll&&submit_link=http%3A%2F%2Fbaike.baidu.com%2Flink%3Furl%3D6uxxD19oBZw3Fc3lV0IShfiMa-YD2eg3yPisqj057BOY_LuxiqZmRCT6oNMjwvlP1YRUb1sv8K8Iyj9Omz3ft_#3>

©2016Baidu 使用百度前必读 <http://www.baidu.com/duty/> | 百科协议
<http://help.baidu.com/question?prod_en=baike&class=159&id=1047> | 百度
百科合作平台 <http://baike.baidu.com/operation/cooperation>
// // // <http://baike.baidu.com/>
// <javascript:;>

  * 关闭

<javascript:;>

<javascript:;>

<javascript:;>
登录 <javascript:;>
分享
//

<javascript:void(0);> //

<javascript:void(0);> //

<javascript:void(0);> //

<javascript:void(0);>
/

/ 分享到微信朋友圈
打开微信“扫一扫”即可将网页分享至朋友圈

添加义项描述义项命名规则 <http://baike.baidu.com/view/10811633.htm>
    //
    您需要给原有的义项和新增加的义项都写一个“义项描述”，让读者能分清楚同
    名的两个事物。
    示例

      *
        词条名
        环太平洋
      *
        原有义项描述
        地理区域
      *
        新增义项描述
        2013年美国科幻电影

    词条名

    原有义项描述(不大于20字)

    新增义项描述(不大于20字)

    *[注意]*如果原义项中已经罗列了多个义项的内容，那么建议您不要直接添加
    义项，而是报告未拆分多义词。 <http://tieba.baidu.com/p/4152042379>
    取消

<http://baike.baidu.com/item/%E7%99%BE%E7%A7%91%E5%91%A8%E8%A7%82%E5%BD%B1%E6%8C%87%E5%8D%97%E7%AC%AC14%E6%9C%9F>

<javascript:;>
